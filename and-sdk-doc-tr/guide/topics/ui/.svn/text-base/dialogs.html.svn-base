<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
































































<html xmlns:v="urn:schemas-microsoft-com:vml" xmlns:o="urn:schemas-microsoft-com:office:office">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8">
<link rel="shortcut icon" type="image/x-icon" href="../../../favicon.ico" />
<title>Creating Dialogs | Android Developers</title>
<link href="../../../assets/android-developer-docs-devguide.css" rel="stylesheet" type="text/css" />
<script src="../../../assets/search_autocomplete.js" type="text/javascript"></script>
<script src="../../../assets/jquery-resizable.min.js" type="text/javascript"></script>
<script src="../../../assets/android-developer-docs.js" type="text/javascript"></script>
<script type="text/javascript">
  setToRoot("../../../");
</script>
<noscript>
  <style type="text/css">
    html,body{overflow:auto;}
    #body-content{position:relative; top:0;}
    #doc-content{overflow:visible;border-left:3px solid #666;}
    #side-nav{padding:0;}
    #side-nav .toggle-list ul {display:block;}
    #resize-packages-nav{border-bottom:3px solid #666;}
  </style>
</noscript>
</head>

<body class="gc-documentation">

  <div id="header">
      <div id="headerLeft">
          <a href="../../../index.html" tabindex="-1"><img
              src="../../../assets/images/bg_logo.png" alt="Android Developers" /></a>
          <ul id="header-tabs" class="guide">
    
	<li id="home-link"><a href="../../../offline.html">
	
		<span class="en">Home</span>
		<span style="display:none" class="de">Startseite</span>
		<span style="display:none" class="es"></span>
		<span style="display:none" class="fr"></span>
		<span style="display:none" class="it"></span>
    <span style="display:none" class="ja">ホーム</span>
		<span style="display:none" class="zh-CN">主页</span>
		<span style="display:none" class="zh-TW">首頁</span>
	
	</a></li>
	<li id="sdk-link"><a href="../../../sdk/index.html">
		<span class="en">SDK</span>
	</a></li>
	<li id="guide-link"><a href="../../../guide/index.html" onClick="return loadLast('guide')">
	
		<span class="en">Dev Guide</span>
		<span style="display:none" class="de">Handbuch</span>
		<span style="display:none" class="es">Guía</span>
		<span style="display:none" class="fr">Guide</span>
		<span style="display:none" class="it">Guida</span>
    <span style="display:none" class="ja">開発ガイド</span>
		<span style="display:none" class="zh-CN">开发人员指南</span>
		<span style="display:none" class="zh-TW">開發指南</span>
	
	</a></li>
	<li id="reference-link"><a href="../../../reference/packages.html" onClick="return loadLast('reference')">
	
		<span class="en">Reference</span>
		<span style="display:none" class="de">Referenz</span>
		<span style="display:none" class="es">Referencia</span>
		<span style="display:none" class="fr">Référence</span>
		<span style="display:none" class="it">Riferimento</span>
    <span style="display:none" class="ja">リファレンス</span>
		<span style="display:none" class="zh-CN">参考</span>
		<span style="display:none" class="zh-TW">參考資料</span>
	
	</a></li>
	<li><a href="http://android-developers.blogspot.com" onClick="return requestAppendHL(this.href)">
	
		<span class="en">Blog</span>
		<span style="display:none" class="de"></span>
		<span style="display:none" class="es"></span>
		<span style="display:none" class="fr"></span>
		<span style="display:none" class="it"></span>
    <span style="display:none" class="ja">ブログ</span>
		<span style="display:none" class="zh-CN">博客</span>
		<span style="display:none" class="zh-TW">網誌</span>
	
	</a></li>
	<li id="videos-link"><a href="../../../videos/index.html" onClick="return loadLast('videos')">
	
		<span class="en">Videos</span>
		<span style="display:none" class="de"></span>
		<span style="display:none" class="es"></span>
		<span style="display:none" class="fr"></span>
		<span style="display:none" class="it"></span>
    <span style="display:none" class="ja">ビデオ</span>
		<span style="display:none" class="zh-CN"></span>
		<span style="display:none" class="zh-TW"></span>
	
	</a></li>
	<li id="community-link"><a href="../../../community/index.html">
	
		<span class="en">Community</span>
		<span style="display:none" class="de"></span>
		<span style="display:none" class="es">Comunidad</span>
		<span style="display:none" class="fr">Communauté</span>
		<span style="display:none" class="it"></span>
    <span style="display:none" class="ja">コミュニティ</span>
		<span style="display:none" class="zh-CN">社区</span>
		<span style="display:none" class="zh-TW">社群</span>
	
	</a></li>
     
</ul>
     
      </div>
      <div id="headerRight">
          <div id="headerLinks">
          
          <a href="http://www.android.com">Android.com</a>
          </div>
  <div id="search" >
      <div id="searchForm">
          <form accept-charset="utf-8" class="gsc-search-box" 
                onsubmit="return submit_search()">
            <table class="gsc-search-box" cellpadding="0" cellspacing="0"><tbody>
                <tr>
                  <td class="gsc-input">
                    <input id="search_autocomplete" class="gsc-input" type="text" size="33" autocomplete="off"
                      title="search developer docs" name="q"
                      value="search developer docs"
                      onFocus="search_focus_changed(this, true)"
                      onBlur="search_focus_changed(this, false)"
                      onkeydown="return search_changed(event, true, '../../../')"
                      onkeyup="return search_changed(event, false, '../../../')" />
                  <div id="search_filtered_div" class="no-display">
                      <table id="search_filtered" cellspacing=0>
                      </table>
                  </div>
                  </td>
                  <td class="gsc-search-button">
                    <input type="submit" value="Search" title="search" id="search-button" class="gsc-search-button" />
                  </td>
                  <td class="gsc-clear-button">
                    <div title="clear results" class="gsc-clear-button">&nbsp;</div>
                  </td>
                </tr></tbody>
              </table>
          </form>
      </div><!-- searchForm -->
  </div><!-- search -->
      </div><!-- headerRight -->
      <script type="text/javascript">
        <!--  
        changeTabLang(getLangPref());
        //-->
      </script>
  </div><!-- header -->

  <div class="g-section g-tpl-240" id="body-content">
    <div class="g-unit g-first side-nav-resizable" id="side-nav">
      <div id="devdoc-nav">
<ul>

  <li>
    <h2><span class="en">Android Basics</span>
        <span class="de" style="display:none">Einführung in Android</span>
        <span class="es" style="display:none">Información básica sobre Android</span>
        <span class="fr" style="display:none">Présentation d'Android</span>
        <span class="it" style="display:none">Nozioni di base su Android</span>
        <span class="ja" style="display:none">Android の基本</span>
        <span class="zh-CN" style="display:none">Android 基础知识</span>
        <span class="zh-TW" style="display:none">Android 簡介</span>
    </h2>
    <ul>
      <li><a href="../../../guide/basics/what-is-android.html">
        <span class="en">What Is Android?</span>
        <span class="de" style="display:none">Was ist Android?</span>
        <span class="es" style="display:none">¿Qué es Android?</span>
        <span class="fr" style="display:none">Qu'est-ce qu'Android&nbsp;?</span>
        <span class="it" style="display:none">Che cos'è Android?</span>
        <span class="ja" style="display:none">Android とは</span>
        <span class="zh-CN" style="display:none">Android 是什么？</span>
        <span class="zh-TW" style="display:none">什麼是 Android？</span>
          </a></li>

  <!--  <li><a style="color:gray;">The Android SDK</a></li> -->
  <!--  <li><a style="color:gray;">Walkthrough for Developers</a></li> -->
      <!-- quick overview of what it's like to develop on Android -->
    </ul>
  </li>
  
  <li>
    <h2>
      <span class="en">Framework Topics</span>
      <span class="de" style="display:none">Framework-Themen</span>
      <span class="es" style="display:none">Temas sobre el framework</span>
      <span class="fr" style="display:none">Thèmes relatifs au framework</span>
      <span class="it" style="display:none">Argomenti relativi al framework</span>
      <span class="ja" style="display:none">フレームワーク トピック</span>
      <span class="zh-CN" style="display:none">框架主题</span>
      <span class="zh-TW" style="display:none">架構主題</span>
    </h2>
    <ul>
      <li><a href="../../../guide/topics/fundamentals.html">
            <span class="en">Application Fundamentals</span>
            <span class="de" style="display:none">Anwendungsgrundlagen</span>
            <span class="es" style="display:none">Fundamentos de las aplicaciones</span>
            <span class="fr" style="display:none">Principes de base des applications</span>
            <span class="it" style="display:none">Concetti fondamentali sulle applicazioni</span>
            <span class="ja" style="display:none">開発の基礎</span>
            <span class="zh-CN" style="display:none">应用程序基础</span>
            <span class="zh-TW" style="display:none">應用程式基本原理</span>

          </a></li>
    </ul>
    <ul>
      <li class="toggle-list">
        <div><a href="../../../guide/topics/ui/index.html">
               <span class="en">User Interface</span>
             </a></div>
        <ul>
          <li><a href="../../../guide/topics/ui/declaring-layout.html">
               <span class="en">Declaring Layout</span> 
              </a></li>
          <li><a href="../../../guide/topics/ui/menus.html">
               <span class="en">Creating Menus</span> 
              </a></li>
          <li><a href="../../../guide/topics/ui/dialogs.html">
                <span class="en">Creating Dialogs</span> 
              </a></li>
          <li><a href="../../../guide/topics/ui/ui-events.html">
                <span class="en">Handling UI Events</span> 
              </a></li>
          <li><a href="../../../guide/topics/ui/notifiers/index.html">
                <span class="en">Notifying the User</span> 
              </a></li>
          <li><a href="../../../guide/topics/ui/themes.html">
                <span class="en">Applying Styles and Themes</span> 
              </a></li>
          <li><a href="../../../guide/topics/ui/custom-components.html">
                <span class="en">Building Custom Components</span> 
              </a></li>
          <li><a href="../../../guide/topics/ui/binding.html">
                <span class="en">Binding to Data with AdapterView</span> 
              </a></li>
          <li><a href="../../../guide/topics/ui/layout-objects.html">
                <span class="en">Common Layout Objects</span> 
              </a></li>
          <li><a href="../../../guide/topics/ui/how-android-draws.html">
                <span class="en">How Android Draws Views</span> 
              </a></li>
        </ul>
      </li>
      <li class="toggle-list">
        <div><a href="../../../guide/topics/resources/index.html">
               <span class="en">Resources and Assets</span> 
             </a></div>
        <ul>
          <li><a href="../../../guide/topics/resources/resources-i18n.html">
                <span class="en">Resources and I18n</span>
              </a></li>
          <li><a href="../../../guide/topics/resources/available-resources.html">
                <span class="en">Available Resource Types</span>
              </a></li>
          <li><a href="../../../guide/topics/resources/localization.html">
                <span class="en">Localization</span>
              </a></li>
        </ul>
      </li>
      <li><a href="../../../guide/topics/intents/intents-filters.html">
            <span class="en">Intents and Intent Filters</span>
          </a></li>
      <li><a href="../../../guide/topics/data/data-storage.html">
            <span class="en">Data Storage</span>
          </a></li>
      <li><a href="../../../guide/topics/providers/content-providers.html">
            <span class="en">Content Providers</span>
          </a></li>
      <li><a href="../../../guide/topics/security/security.html">
            <span class="en">Security and Permissions</span>
          </a></li>
  <!--  <li><a style="color:gray;">Processes and Threads</a></li> -->
  <!--  <li><a style="color:gray;">Interprocess Communication</a></li> -->
      <li class="toggle-list">
        <div><a href="../../../guide/topics/manifest/manifest-intro.html">
               <span class="en">The AndroidManifest.xml File</span>
             </a></div>
        <ul>
          <li><a href="../../../guide/topics/manifest/action-element.html">&lt;action&gt;</a></li>
          <li><a href="../../../guide/topics/manifest/activity-element.html">&lt;activity&gt;</a></li>
          <li><a href="../../../guide/topics/manifest/activity-alias-element.html">&lt;activity-alias&gt;</a></li>
          <li><a href="../../../guide/topics/manifest/application-element.html">&lt;application&gt;</a></li>
          <li><a href="../../../guide/topics/manifest/category-element.html">&lt;category&gt;</a></li>
          <li><a href="../../../guide/topics/manifest/data-element.html">&lt;data&gt;</a></li>
          <li><a href="../../../guide/topics/manifest/grant-uri-permission-element.html">&lt;grant-uri-permission&gt;</a></li>
          <li><a href="../../../guide/topics/manifest/instrumentation-element.html">&lt;instrumentation&gt;</a></li>
          <li><a href="../../../guide/topics/manifest/intent-filter-element.html">&lt;intent-filter&gt;</a></li>
          <li><a href="../../../guide/topics/manifest/manifest-element.html">&lt;manifest&gt;</a></li>
          <li><a href="../../../guide/topics/manifest/meta-data-element.html">&lt;meta-data&gt;</a></li>
          <li><a href="../../../guide/topics/manifest/path-permission-element.html">&lt;path-permission&gt;</a></li>
          <li><a href="../../../guide/topics/manifest/permission-element.html">&lt;permission&gt;</a></li>
          <li><a href="../../../guide/topics/manifest/permission-group-element.html">&lt;permission-group&gt;</a></li>
          <li><a href="../../../guide/topics/manifest/permission-tree-element.html">&lt;permission-tree&gt;</a></li>
          <li><a href="../../../guide/topics/manifest/provider-element.html">&lt;provider&gt;</a></li>
          <li><a href="../../../guide/topics/manifest/receiver-element.html">&lt;receiver&gt;</a></li>
          <li><a href="../../../guide/topics/manifest/service-element.html">&lt;service&gt;</a></li>
          <li><a href="../../../guide/topics/manifest/supports-screens-element.html">&lt;supports-screens&gt;</a></li>  <!-- ##api level 4## -->
          <li><a href="../../../guide/topics/manifest/uses-configuration-element.html">&lt;uses-configuration&gt;</a></li>
          <li><a href="../../../guide/topics/manifest/uses-feature-element.html">&lt;uses-feature&gt;</a></li> <!-- ##api level 4## -->
          <li><a href="../../../guide/topics/manifest/uses-library-element.html">&lt;uses-library&gt;</a></li>
          <li><a href="../../../guide/topics/manifest/uses-permission-element.html">&lt;uses-permission&gt;</a></li>
          <li><a href="../../../guide/topics/manifest/uses-sdk-element.html">&lt;uses-sdk&gt;</a></li>
        </ul>
      </li>
    </ul>
    <ul>
      <li class="toggle-list">
        <div><a href="../../../guide/topics/graphics/index.html">
               <span class="en">Graphics</span>
             </a></div>
        <ul>
          <li><a href="../../../guide/topics/graphics/2d-graphics.html">
                <span class="en">2D Graphics</span>
              </a></li>
          <li><a href="../../../guide/topics/graphics/opengl.html">
                <span class="en">3D with OpenGL</span>
              </a></li>
        </ul>
      </li>
      <li><a href="../../../guide/topics/media/index.html">
            <span class="en">Audio and Video</span>
          </a></li>
  <!--<li class="toggle-list">
        <div><a style="color:gray;">Sensors</a></div>
          <ul>
            <li><a style="color:gray;">Camera</a></li>
            <li><a style="color:gray;">Compass</a></li>
            <li><a style="color:gray;">Accelerometer</a></li>
          </ul>
      </li> -->
      <li><a href="../../../guide/topics/location/index.html">
            <span class="en">Location and Maps</span>
          </a></li>
  <!--<li class="toggle-list">
        <div><a style="color:gray;">Wireless Controls</a></div>
          <ul>
            <li><a style="color:gray;">Wi-Fi</a></li>
            <li><a style="color:gray;">Bluetooth</a></li>
          </ul>
      </li> -->
  <!--<li><a style="color:gray;">Localization</a></li>  -->
      <li><a href="../../../guide/topics/appwidgets/index.html">
            <span class="en">App Widgets</span>
          </a></li>
    </ul>
  </li>
  
  <li>
    <h2><span class="en">Developing</span>
               <span class="de" style="display:none">Entwicklung</span>
               <span class="es" style="display:none">Desarrollo</span>
               <span class="fr" style="display:none">Développement</span>
               <span class="it" style="display:none">Sviluppo</span>
               <span class="ja" style="display:none">開発</span>
               <span class="zh-CN" style="display:none">开发</span>
               <span class="zh-TW" style="display:none">開發</span>
    </h2>
    <ul>
  <!--<li><a href="">Developing for Android</a></li>
      signing, upgrading, selecting a package name, select device profile, touch, trackball, dpad available, etc. -->
      <li><a href="../../../guide/developing/eclipse-adt.html">
            <span class="en">In Eclipse, with ADT</span> 
            <span class="de" style="display:none">In Eclipse, mit ADT</span>
            <span class="es" style="display:none">En Eclipse, con ADT</span>
            <span class="fr" style="display:none">Sous Eclipse, à l'aide du plugin ADT</span>
            <span class="it" style="display:none">In Eclipse, con ADT</span>
            <span class="ja" style="display:none">Eclipse 内で ADT を使用</span>
            <span class="zh-CN" style="display:none">利用 ADT 在 Eclipse 中开发</span>
            <span class="zh-TW" style="display:none">在加裝 ADT 工具的 Eclipse 環境中</span>
          </a></li>
      <li><a href="../../../guide/developing/other-ide.html">
            <span class="en">In Other IDEs</span>
            <span class="de" style="display:none">In anderen IDEs</span>
            <span class="es" style="display:none">En otros entornos</span>
            <span class="fr" style="display:none">Sous d'autres environnements</span>
            <span class="it" style="display:none">In altri IDE</span>
            <span class="ja" style="display:none">その他の統合開発環境</span>
            <span class="zh-CN" style="display:none">在其他 IDE 中开发</span>
            <span class="zh-TW" style="display:none">在其他開發環境中</span>
          </a></li>
      <li><a href="../../../guide/developing/device.html">
            <span class="en">On a Device</span>
          </a></li>
      <li><a href="../../../guide/developing/debug-tasks.html">
            <span class="en">Debugging Tasks</span>
          </a></li>
      <li class="toggle-list">
        <div><a href="../../../guide/developing/tools/index.html">
            <span class="en">Tools</span>
          </a></div>
        <ul>
      		<li><a href="../../../guide/developing/tools/aapt.html">aapt</a></li>
      		<li><a href="../../../guide/developing/tools/adb.html">adb</a></li>
      		<li><a href="../../../guide/developing/tools/othertools.html#android">android</a></li>
      <!--<li><a href="../../../guide/developing/tools/adt.html">ADT Plugin</a></li>-->
      		<li><a href="../../../guide/developing/tools/aidl.html">aidl</a></li>
      		<li><a href="../../../guide/developing/tools/avd.html">AVDs</a></li>
      		<li><a href="../../../guide/developing/tools/ddms.html">ddms</a></li>
      		<li><a href="../../../guide/developing/tools/othertools.html#dx">dx</a></li>
      		<li><a href="../../../guide/developing/tools/draw9patch.html">Draw 9-Patch</a></li>
      		<li><a href="../../../guide/developing/tools/emulator.html">Emulator</a></li>
      		<li><a href="../../../guide/developing/tools/hierarchy-viewer.html">Hierarchy Viewer</a></li>
      		<li><a href="../../../guide/developing/tools/layoutopt.html">layoutopt</a></li>
      		<li><a href="../../../guide/developing/tools/othertools.html#mksdcard">mksdcard</a></li>
      		<li><a href="../../../guide/developing/tools/monkey.html">Monkey</a></li>
      		<li><a href="../../../guide/developing/tools/adb.html#sqlite">sqlite3</a></li>
      		<li><a href="../../../guide/developing/tools/traceview.html" >Traceview</a></li>
      		<li><a href="../../../guide/developing/tools/zipalign.html" >zipalign</a></li>
    	  </ul>
  	  </li>
  <!--<li><a href="../../../guide/developing/instrumentation/index.html">Instrumentation</a></li>
      <li><a style="color:gray;">JUnit</a></li> -->
    </ul>
  </li>
  
  <li>
    <h2><span class="en">Publishing</span>
        <span class="de" style="display:none">Veröffentlichung</span>
        <span class="es" style="display:none">Publicación</span>
        <span class="fr" style="display:none">Publication</span>
        <span class="it" style="display:none">Pubblicazione</span>
        <span class="ja" style="display:none">公開</span>
        <span class="zh-CN" style="display:none">发布</span>
        <span class="zh-TW" style="display:none">發佈</span>
    </h2>
    <ul>
      <li><a href="../../../guide/publishing/app-signing.html">
            <span class="en">Signing Your Applications</span>
            <span class="de" style="display:none">Signieren Ihrer Anwendungen</span>
            <span class="es" style="display:none">Firma de aplicaciones</span>
            <span class="fr" style="display:none">Attribution de votre signature <br />à vos applications</span>
            <span class="it" style="display:none">Firma delle applicazioni</span>
            <span class="ja" style="display:none">アプリケーションへの署名</span>
            <span class="zh-CN" style="display:none">应用程序签名</span>
            <span class="zh-TW" style="display:none">簽署應用程式</span>
          </a></li>
      <li><a href="../../../guide/publishing/versioning.html">
            <span class="en">Versioning Your Applications</span>
            <span class="de" style="display:none">Versionsverwaltung für Ihre <br />Anwendungen</span>
            <span class="es" style="display:none">Versiones de las aplicaciones</span>
            <span class="fr" style="display:none">Attribution d'une version à vos applications</span>
            <span class="it" style="display:none">Controllo versioni delle applicazioni</span>
            <span class="ja" style="display:none">アプリケーションのバージョニング</span>
            <span class="zh-CN" style="display:none">应用程序版本控制</span>
            <span class="zh-TW" style="display:none">應用程式版本設定</span>
          </a></li>
      <li><a href="../../../guide/publishing/preparing.html">
            <span class="en">Preparing to Publish</span>
            <span class="de" style="display:none">Vorbereitung auf die Veröffentlichung</span>
            <span class="es" style="display:none">Publicación de aplicaciones</span>
            <span class="fr" style="display:none">Préparation à la publication</span>
            <span class="it" style="display:none">Preparativi per la pubblicazione</span>
            <span class="ja" style="display:none">公開の準備</span>
            <span class="zh-CN" style="display:none">准备发布</span>
            <span class="zh-TW" style="display:none">準備發佈</span>
          </a></li>
      <li><a href="../../../guide/publishing/publishing.html">
            <span class="en">Publishing Your Applications</span>
          </a></li>
    </ul>
  </li>
  
  <li>
    <h2><span class="en">Best Practices</span>
               <span class="de" style="display:none">Bewährte Verfahren</span>
               <span class="es" style="display:none">Prácticas recomendadas</span>
               <span class="fr" style="display:none">Meilleures pratiques</span>
               <span class="it" style="display:none">Best practice</span>
               <span class="ja" style="display:none">ベスト プラクティス</span>
               <span class="zh-CN" style="display:none">最佳实践</span>
               <span class="zh-TW" style="display:none">最佳實務</span>
    </h2>
    <ul>
      <li><a href="../../../guide/practices/screens_support.html">
            <span class="en">Supporting Multiple Screens</span>
          </a></li>
      <li class="toggle-list">
        <div><a href="../../../guide/practices/ui_guidelines/index.html">
               <span class="en">UI Guidelines</span>
             </a></div>
        <ul>
          <li><a href="../../../guide/practices/ui_guidelines/icon_design.html">
                <span class="en">Icon Design</span>
              </a></li>
          <li><a href="../../../guide/practices/ui_guidelines/widget_design.html">
                <span class="en">App Widget Design</span>
              </a></li>
          <li><a href="../../../guide/practices/ui_guidelines/activity_task_design.html">
                <span class="en">Activity and Task Design</span>
              </a></li>
          <li><a href="../../../guide/practices/ui_guidelines/menu_design.html">
                <span class="en">Menu Design</span>
              </a></li>
        </ul>
      </li>
      </ul>
      <ul>
      <li><a href="../../../guide/practices/design/performance.html">
            <span class="en">Designing for Performance</span>
          </a></li>
      <li><a href="../../../guide/practices/design/responsiveness.html">
            <span class="en">Designing for Responsiveness</span>
          </a></li>
      <li><a href="../../../guide/practices/design/seamlessness.html">
            <span class="en">Designing for Seamlessness</span>
          </a></li>
    </ul>
  </li>
  
  <li>
    <h2><span class="en">Tutorials and Sample Code</span>
               <span class="de" style="display:none">Lernprogramme und Beispielcode</span>
               <span class="es" style="display:none">Tutoriales y código de ejemplo</span>
               <span class="fr" style="display:none">Didacticiels et exemple de code</span>
               <span class="it" style="display:none">Esercitazioni e codice di esempio</span>
               <span class="ja" style="display:none">チュートリアルとサンプル コード</span>
               <span class="zh-CN" style="display:none">辅导手册和示例代码</span>
               <span class="zh-TW" style="display:none">教學課程與程式碼範例</span>
    </h2>
    <ul>
      <li><a href="../../../guide/tutorials/hello-world.html">
            <span class="en">Hello World</span>
          </a></li>
      <li><a href="../../../guide/tutorials/views/index.html">
            <span class="en">Hello Views</span>
          </a></li>
      <li><a href="../../../guide/tutorials/localization/index.html">
            <span class="en">Hello Localization</span>
          </a></li>
      <li><a href="../../../guide/tutorials/notepad/index.html">
            <span class="en">Notepad Tutorial</span>
          </a></li>
    </ul>
    <ul>
      <li class="toggle-list">
        <div><a href="../../../guide/samples/index.html">
               <span class="en">Sample Code</span>
             </a></div>
        <ul>
          <li><a href="../../../guide/samples/ApiDemos/index.html">
                <span class="en">API Demos</span>
              </a></li>
          <li><a href="../../../guide/samples/Home/index.html">
                <span class="en">Home</span>
              </a></li>
          <li><a href="../../../guide/samples/JetBoy/index.html">
                <span class="en">JetBoy</span>
              </a></li>
          <li><a href="../../../guide/samples/LunarLander/index.html">
                <span class="en">Lunar Lander</span>
              </a></li>
          <li><a href="../../../guide/samples/NotePad/index.html">
                <span class="en">Note Pad</span>
              </a></li>
          <li><a href="../../../guide/samples/SearchableDictionary/index.html">
                <span class="en">Searchable Dictionary</span>
              </a></li>
          <li><a href="../../../guide/samples/Snake/index.html">
                <span class="en">Snake</span>
              </a></li>
          <li><a href="../../../guide/samples/SoftKeyboard/index.html">
                <span class="en">Soft Keyboard</span>
              </a></li>
        </ul>
      </li>
    </ul>
  </li>
  

  <li>
    <h2><span class="en">Appendix</span>
               <span class="de" style="display:none">Anhang</span>
               <span class="es" style="display:none">Apéndice</span>
               <span class="fr" style="display:none">Annexes</span>
               <span class="it" style="display:none">Appendice</span>
               <span class="ja" style="display:none">付録</span>
               <span class="zh-CN" style="display:none">附录</span>
               <span class="zh-TW" style="display:none">附錄</span>
    </h2>
    <ul>
      <li><a href="../../../guide/appendix/api-levels.html">
            <span class="en">Android API Levels</span>
          </a></li>
      <li><a href="../../../guide/appendix/media-formats.html">
            <span class="en">Supported Media Formats</span>
          </a></li>
      <li><a href="../../../guide/appendix/g-app-intents.html">
            <span class="en">Intents List: Google Apps</span>
          </a></li>
      <li><a href="../../../guide/appendix/glossary.html">
            <span class="en">Glossary</span>
          </a></li>
      <li><a href="../../../guide/appendix/faq/index.html">
            <span class="en">FAQ</span>
          </a></li>
    </ul>
  </li>

</ul>

<script type="text/javascript">
<!--
    buildToggleLists();
    changeNavLang(getLangPref());
//-->
</script>

      </div>
    </div> <!-- end side-nav -->
    <script>
      addLoadEvent(function() {
        scrollIntoView("devdoc-nav");
        });
    </script>




<div class="g-unit" id="doc-content"><a name="top"></a>

<div id="jd-header" class="guide-header">
  <span class="crumb">
    
      <a href="index.html">User Interface</a> >
    
  </span>
<h1>Creating Dialogs——创建对话框</h1>
</div>

  <div id="jd-content">


    <div class="jd-descr">
    <div id="qv-wrapper">
  <div id="qv">
    <h2>Key classes</h2>
    <ol>
      <li><code><a href="../../../reference/android/app/Dialog.html">Dialog</a></code></li>
    </ol>
    <h2>In this document</h2>
    <ol>
      <li><a href="#ShowingADialog">Showing a Dialog</a></li>
      <li><a href="#DismissingADialog">Dismissing a Dialog</a></li>
      <li><a href="#AlertDialog">Creating an AlertDialog</a>
        <ol>
          <li><a href="#AddingButtons">Adding buttons</a></li>
          <li><a href="#AddingAList">Adding a list</a></li>
        </ol>
      </li>
      <li><a href="#ProgressDialog">Creating a ProgressDialog</a>
        <ol>
          <li><a href="#ShowingAProgressBar">Showing a progress bar</a></li>
        </ol>
      </li>
      <li><a href="#CustomDialog">Creating a Custom Dialog</a></li>
    </ol>
  </div>
</div>

<p>A dialog is usually a small window that appears in front of the current Activity.
The underlying Activity loses focus and the dialog accepts all user interaction. 
Dialogs are normally used
for notifications and short activities that directly relate to the application in progress.<br>
对话框一般是一个出现在当前活动之上的小窗口。<span style="font-size:10.0pt;font-family:&quot;Times New Roman&quot;;
mso-fareast-font-family:宋体;mso-ansi-language:EN-US;mso-fareast-language:EN-US;
mso-bidi-language:AR-SA"><span style="mso-spacerun:yes">&nbsp;</span></span><span lang="EN-US" style="font-size:10.0pt;font-family:宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;
mso-hansi-font-family:&quot;Times New Roman&quot;;mso-bidi-font-family:&quot;Times New Roman&quot;;
mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">对话框之下的活动失去用户关注，对话框进行与用户的交互。</span><span lang="EN-US" style="font-size:10.0pt;font-family:
宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;mso-hansi-font-family:&quot;Times New Roman&quot;;
mso-bidi-font-family:&quot;Times New Roman&quot;;mso-ansi-language:EN-US;mso-fareast-language:
EN-US;mso-bidi-language:AR-SA">对话框通常用于通知和</span><span lang="EN-US" style="font-size:10.0pt;font-family:&quot;Times New Roman&quot;;mso-fareast-font-family:
宋体;mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA"><span style="mso-spacerun:yes">&nbsp;&nbsp;
</span></span>
<span lang="EN-US" style="font-size:
10.0pt;font-family:宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;mso-hansi-font-family:
&quot;Times New Roman&quot;;mso-bidi-font-family:&quot;Times New Roman&quot;;mso-ansi-language:
EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">与正在运行的应用程序直接联系的简短&nbsp; 
的活动。</span></p>

<p>The Android API supports the following types of <code><a href="../../../reference/android/app/Dialog.html">Dialog</a></code> objects:<br>
<span lang="EN-US" style="font-size:10.0pt;font-family:
宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;mso-hansi-font-family:&quot;Times New Roman&quot;;
mso-bidi-font-family:&quot;Times New Roman&quot;;mso-ansi-language:EN-US;mso-fareast-language:
EN-US;mso-bidi-language:AR-SA">Android API 支持下列几种</span><code><a href="../../../reference/android/app/Dialog.html">Dialog</a></code><span lang="EN-US" style="font-size:10.0pt;font-family:宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;
mso-hansi-font-family:&quot;Times New Roman&quot;;mso-bidi-font-family:&quot;Times New Roman&quot;;
mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">对象:</span></p>
<dl>
  <dt><code><a href="../../../reference/android/app/AlertDialog.html">AlertDialog</a>——告警对话框</code></dt>
  <dd>A dialog that can manage zero, one, two, or three buttons, and/or a list of
    selectable items that can include checkboxes or radio buttons. The AlertDialog 
    is capable of constructing most dialog user interfaces and is the suggested dialog type.
    See <a href="#AlertDialog">Creating an AlertDialog</a> below.<br>
	<span lang="EN-US" style="font-size:10.0pt;font-family:
宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;mso-hansi-font-family:&quot;Times New Roman&quot;;
mso-bidi-font-family:&quot;Times New Roman&quot;;mso-ansi-language:EN-US;mso-fareast-language:
EN-US;mso-bidi-language:AR-SA">告警对话框可以管理零个，一个，两个或三个按键</span><span lang="EN-US" style="font-size:10.0pt;font-family:&quot;Times New Roman&quot;;mso-fareast-font-family:
宋体;mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA"><span style="mso-spacerun:yes">&nbsp;&nbsp;
	</span></span>
	<span lang="EN-US" style="font-size:
10.0pt;font-family:宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;mso-hansi-font-family:
&quot;Times New Roman&quot;;mso-bidi-font-family:&quot;Times New Roman&quot;;mso-ansi-language:
EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">和/或</span><span lang="EN-US" style="font-size:10.0pt;font-family:&quot;Times New Roman&quot;;mso-fareast-font-family:
宋体;mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA"><span style="mso-spacerun:yes">&nbsp;&nbsp;
	</span></span>
	<span lang="EN-US" style="font-size:
10.0pt;font-family:宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;mso-hansi-font-family:
&quot;Times New Roman&quot;;mso-bidi-font-family:&quot;Times New Roman&quot;;mso-ansi-language:
EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">
	一个包含选择项的列表，选择项可以是复选框形式或单选按钮形式。告警对话框可用于构建大多数的界面的对话框，并且是推荐的对话框类型。参见下边的<a href="#AlertDialog">Creating an AlertDialog</a></span><span lang="EN-US" style="font-size:10.0pt;font-family:宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;
mso-hansi-font-family:&quot;Times New Roman&quot;;mso-bidi-font-family:&quot;Times New Roman&quot;;
mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">。</span></dd>
  <dt><code><a href="../../../reference/android/app/ProgressDialog.html">ProgressDialog</a>——进度对话框</code></dt>
  <dd>A dialog that displays a progress wheel or progress bar. Because it's an extension of
    the AlertDialog, it also supports buttons.
    See <a href="#ProgressDialog">Creating a ProgressDialog</a> below.<br>
	<span lang="EN-US" style="font-size:10.0pt;font-family:
宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;mso-hansi-font-family:&quot;Times New Roman&quot;;
mso-bidi-font-family:&quot;Times New Roman&quot;;mso-ansi-language:EN-US;mso-fareast-language:
EN-US;mso-bidi-language:AR-SA">进度对话框是显示一个进度转轮或进度条的对话框。因为他是</span><span lang="EN-US" style="font-size:10.0pt;font-family:宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;
mso-hansi-font-family:&quot;Times New Roman&quot;;mso-bidi-font-family:&quot;Times New Roman&quot;;
mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">AlertDialog的一个继承类，它也支持按钮。参看下边的<a href="#ProgressDialog">Creating a ProgressDialog</a>。</span></dd>
  <dt><code><a href="../../../reference/android/app/DatePickerDialog.html">DatePickerDialog</a>——日期输入对话框</code></dt>
  <dd>A dialog that allows the user to select a date. See the 
    <a href="../../../guide/tutorials/views/hello-datepicker.html">Hello DatePicker</a> tutorial.<br>
	<span lang="EN-US" style="font-size:10.0pt;font-family:
宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;mso-hansi-font-family:&quot;Times New Roman&quot;;
mso-bidi-font-family:&quot;Times New Roman&quot;;mso-ansi-language:EN-US;mso-fareast-language:
EN-US;mso-bidi-language:AR-SA">日期输入对话框允许用户选择一个日期。参看</span><span lang="EN-US" style="font-size:10.0pt;font-family:宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;
mso-hansi-font-family:&quot;Times New Roman&quot;;mso-bidi-font-family:&quot;Times New Roman&quot;;
mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA"><a href="../../../guide/tutorials/views/hello-datepicker.html">Hello DatePicker</a> 
	指南。</span></dd>
  <dt><code><a href="../../../reference/android/app/TimePickerDialog.html">TimePickerDialog</a>——时间输入对话框</code></dt>
  <dd>A dialog that allows the user to select a time. See the 
    <a href="../../../guide/tutorials/views/hello-timepicker.html">Hello TimePicker</a> tutorial.<br>
	<span lang="EN-US" style="font-size:10.0pt;font-family:
宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;mso-hansi-font-family:&quot;Times New Roman&quot;;
mso-bidi-font-family:&quot;Times New Roman&quot;;mso-ansi-language:EN-US;mso-fareast-language:
EN-US;mso-bidi-language:AR-SA">日期输入对话框允许用户选择时间。参看</span><a href="../../../guide/tutorials/views/hello-timepicker.html">Hello TimePicker</a><span lang="EN-US" style="font-size:10.0pt;font-family:宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;
mso-hansi-font-family:&quot;Times New Roman&quot;;mso-bidi-font-family:&quot;Times New Roman&quot;;
mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">指南。</span></dd>
</dl>

<p>If you would like to customize your own dialog, you can extend the
base <code><a href="../../../reference/android/app/Dialog.html">Dialog</a></code> object or any of the subclasses listed above and define a new layout.
See the section on <a href="#CustomDialog">Creating a Custom Dialog</a> below.<br>
<span lang="EN-US" style="font-size:10.0pt;font-family:
宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;mso-hansi-font-family:&quot;Times New Roman&quot;;
mso-bidi-font-family:&quot;Times New Roman&quot;;mso-ansi-language:EN-US;mso-fareast-language:
EN-US;mso-bidi-language:AR-SA">如果您想自己个性化您自己的对话框，您可以继承</span><code><a href="../../../reference/android/app/Dialog.html">Dialog</a></code><span lang="EN-US" style="font-size:10.0pt;font-family:宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;
mso-hansi-font-family:&quot;Times New Roman&quot;;mso-bidi-font-family:&quot;Times New Roman&quot;;
mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">基类或者上述的几个子类来定义一种新的布局。参看下面</span><a href="#CustomDialog">Creating a Custom Dialog</a><span lang="EN-US" style="font-size:10.0pt;font-family:宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;
mso-hansi-font-family:&quot;Times New Roman&quot;;mso-bidi-font-family:&quot;Times New Roman&quot;;
mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">章节。</span></p>


<h2 id="ShowingADialog">Showing a Dialog——显示一个对话框</h2>

<p>A dialog is always created and displayed as a part of an <code><a href="../../../reference/android/app/Activity.html">Activity</a></code>. 
You should normally create dialogs from within your Activity's
<code><a href="../../../reference/android/app/Activity.html#onCreateDialog(int)">onCreateDialog(int)</a></code> callback method. 
When you use this callback, the Android system automatically manages the state of 
each dialog and hooks them to the Activity, effectively making it the "owner" of each dialog.
As such, each dialog inherits certain properties from the Activity. For example, when a dialog
is open, the Menu key reveals the options menu defined for the Activity and the volume
keys modify the audio stream used by the Activity.<br>
<span lang="EN-US" style="font-size:10.0pt;font-family:
宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;mso-hansi-font-family:&quot;Times New Roman&quot;;
mso-bidi-font-family:&quot;Times New Roman&quot;;mso-ansi-language:EN-US;mso-fareast-language:
EN-US;mso-bidi-language:AR-SA">对话框总是作为</span><span lang="EN-US" style="font-size:
10.0pt;font-family:&quot;Times New Roman&quot;;mso-fareast-font-family:宋体;mso-ansi-language:
EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">Activity</span><span lang="EN-US" style="font-size:10.0pt;font-family:宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;
mso-hansi-font-family:&quot;Times New Roman&quot;;mso-bidi-font-family:&quot;Times New Roman&quot;;
mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">的一部分来创建和显示的。通常是您需要在您的活动的</span><code><a href="../../../reference/android/app/Activity.html#onCreateDialog(int)">onCreateDialog(int)</a></code><span lang="EN-US" style="font-size:10.0pt;font-family:宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;
mso-hansi-font-family:&quot;Times New Roman&quot;;mso-bidi-font-family:&quot;Times New Roman&quot;;
mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">回调方法中创建对话框。当您使用这个回调时，Android系统会自动的管理每个对话框的状态并将对话框与活动挂钩，最终使活动成为对话框的“所有者”。这样一来，每个对话框会从活动继承某些属性。例如，当对话框打开时，MENU键显示的是为活动定义的菜单，按下音量调节键调节的是活动使用音频的声音。</span></p>

<p class="note"><strong>Note:</strong> If you decide to create a dialog outside of the 
<code>onCreateDialog()</code> method, it will not be attached to an Activity. You can, however,
attach it to an Activity with <code><a href="../../../reference/android/app/Dialog.html#setOwnerActivity(android.app.Activity)">setOwnerActivity(Activity)</a></code>.<br>
<strong>注意：</strong><span lang="EN-US">如果您决定在</span><code>onCreateDialog()</code><span lang="EN-US">方法之外创建一个对话框，这个对话框不会被附加到活动中。但是您可以使用</span><code><a href="../../../reference/android/app/Dialog.html#setOwnerActivity(android.app.Activity)">setOwnerActivity(Activity)</a></code><span lang="EN-US">方法，将其附加到一个活动中。</span></p>

<p>When you want to show a dialog, call 
<code><a href="../../../reference/android/app/Activity.html#showDialog(int)">showDialog(int)</a></code> and pass it an integer that uniquely identifies the 
dialog that you want to display.<br>
当您想要显示一个对话框的时候，调用 
<code><a href="../../../reference/android/app/Activity.html#showDialog(int)">showDialog(int)</a></code>，并传给他&nbsp; 
能唯一的识别您想要显示的对话框的&nbsp;&nbsp; 整数。</p>

<p>When a dialog is requested for the first time, Android calls 
<code><a href="../../../reference/android/app/Activity.html#onCreateDialog(int)">onCreateDialog(int)</a></code> from your Activity, which is
where you should instantiate the <code><a href="../../../reference/android/app/Dialog.html">Dialog</a></code>. This callback method
is passed the same ID that you passed to <code><a href="../../../reference/android/app/Activity.html#showDialog(int)">showDialog(int)</a></code>. 
After you create the Dialog, return the object at the end of the method.<br>
<span lang="EN-US" style="font-size:10.0pt;font-family:
宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;mso-hansi-font-family:&quot;Times New Roman&quot;;
mso-bidi-font-family:&quot;Times New Roman&quot;;mso-ansi-language:EN-US;mso-fareast-language:
EN-US;mso-bidi-language:AR-SA">当一个对话框第一次被请求时，</span><span lang="EN-US" style="font-size:10.0pt;font-family:&quot;Times New Roman&quot;;mso-fareast-font-family:
宋体;mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">Android</span><span lang="EN-US" style="font-size:10.0pt;font-family:宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;
mso-hansi-font-family:&quot;Times New Roman&quot;;mso-bidi-font-family:&quot;Times New Roman&quot;;
mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">会调用您的活动的</span><code><a href="../../../reference/android/app/Activity.html#onCreateDialog(int)">onCreateDialog(int)</a></code><span lang="EN-US" style="font-size:10.0pt;font-family:宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;
mso-hansi-font-family:&quot;Times New Roman&quot;;mso-bidi-font-family:&quot;Times New Roman&quot;;
mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">方法，在这个方法中，您应该实例化您的</span><code><a href="../../../reference/android/app/Dialog.html">Dialog</a></code><span lang="EN-US" style="font-size:10.0pt;font-family:宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;
mso-hansi-font-family:&quot;Times New Roman&quot;;mso-bidi-font-family:&quot;Times New Roman&quot;;
mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">。这个回调方法会收到与您传给</span><code><a href="../../../reference/android/app/Activity.html#showDialog(int)">showDialog(int)</a></code><span lang="EN-US" style="font-size:10.0pt;font-family:宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;
mso-hansi-font-family:&quot;Times New Roman&quot;;mso-bidi-font-family:&quot;Times New Roman&quot;;
mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">方法相同的</span><span lang="EN-US" style="font-size:10.0pt;font-family:&quot;Times New Roman&quot;;mso-fareast-font-family:
宋体;mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">ID</span><span lang="EN-US" style="font-size:10.0pt;font-family:宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;
mso-hansi-font-family:&quot;Times New Roman&quot;;mso-bidi-font-family:&quot;Times New Roman&quot;;
mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">。在您创建对话框之后，请在方法结尾处返回这个实例化的对象。</span></p>

<p>Before the dialog is displayed, Android also calls the optional callback method
<code><a href="../../../reference/android/app/Activity.html#onPrepareDialog(int, android.app.Dialog)">onPrepareDialog(int, Dialog)</a></code>. Define this method if you want to change
any properties of the dialog each time it is opened. This method is called
every time a dialog is opened, whereas <code><a href="../../../reference/android/app/Activity.html#onCreateDialog(int)">onCreateDialog(int)</a></code> is only
called the very first time a dialog is opened. If you don't define 
<code><a href="../../../reference/android/app/Activity.html#onPrepareDialog(int, android.app.Dialog)">
onPrepareDialog()</a></code>, then the dialog will 
remain the same as it was the previous time it was opened. This method is also passed the dialog's
ID, along with the Dialog object you created in <code><a href="../../../reference/android/app/Activity.html#onCreateDialog(int)">onCreateDialog()</a></code>.<br>
<span lang="EN-US" style="font-size:10.0pt;font-family:
宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;mso-hansi-font-family:&quot;Times New Roman&quot;;
mso-bidi-font-family:&quot;Times New Roman&quot;;mso-ansi-language:EN-US;mso-fareast-language:
EN-US;mso-bidi-language:AR-SA">对话框被显示之前，</span><span lang="EN-US" style="font-size:10.0pt;font-family:&quot;Times New Roman&quot;;mso-fareast-font-family:
宋体;mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">Android</span><span lang="EN-US" style="font-size:10.0pt;font-family:宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;
mso-hansi-font-family:&quot;Times New Roman&quot;;mso-bidi-font-family:&quot;Times New Roman&quot;;
mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">会调用可选的</span><code><a href="../../../reference/android/app/Activity.html#onPrepareDialog(int, android.app.Dialog)">onPrepareDialog(int, Dialog)</a></code><span lang="EN-US" style="font-size:10.0pt;font-family:宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;
mso-hansi-font-family:&quot;Times New Roman&quot;;mso-bidi-font-family:&quot;Times New Roman&quot;;
mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">回调方法。如果您想在每次对话框被打开时改变他的一些属性，您可以定义这个方法。这个方法在每次对话框打开时都会被调用，而</span><code><a href="../../../reference/android/app/Activity.html#onCreateDialog(int)">onCreateDialog(int)</a></code><span lang="EN-US" style="font-size:10.0pt;font-family:宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;
mso-hansi-font-family:&quot;Times New Roman&quot;;mso-bidi-font-family:&quot;Times New Roman&quot;;
mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">方法只在对话框最初一次开启才被调用。如果您不定义</span><code><a href="../../../reference/android/app/Activity.html#onPrepareDialog(int, android.app.Dialog)">onPrepareDialog()</a></code><span lang="EN-US" style="font-size:10.0pt;font-family:宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;
mso-hansi-font-family:&quot;Times New Roman&quot;;mso-bidi-font-family:&quot;Times New Roman&quot;;
mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">，那么对话框将与上次打开时相同。这个方法同您在</span><code><a href="../../../reference/android/app/Activity.html#onCreateDialog(int)">onCreateDialog()</a></code><span lang="EN-US" style="font-size:10.0pt;font-family:宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;
mso-hansi-font-family:&quot;Times New Roman&quot;;mso-bidi-font-family:&quot;Times New Roman&quot;;
mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">中定义的</span><span lang="EN-US" style="font-size:10.0pt;font-family:&quot;Times New Roman&quot;;mso-fareast-font-family:
宋体;mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">Dialog</span><span lang="EN-US" style="font-size:10.0pt;font-family:宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;
mso-hansi-font-family:&quot;Times New Roman&quot;;mso-bidi-font-family:&quot;Times New Roman&quot;;
mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">对象一样，也收到对话框的</span><span lang="EN-US" style="font-size:10.0pt;font-family:&quot;Times New Roman&quot;;mso-fareast-font-family:
宋体;mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">ID</span><span lang="EN-US" style="font-size:10.0pt;font-family:宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;
mso-hansi-font-family:&quot;Times New Roman&quot;;mso-bidi-font-family:&quot;Times New Roman&quot;;
mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">。</span></p>

<p>The best way to define the <code><a href="../../../reference/android/app/Activity.html#onCreateDialog(int)">onCreateDialog(int)</a></code> and 
<code><a href="../../../reference/android/app/Activity.html#onPrepareDialog(int, android.app.Dialog)">onPrepareDialog(int, Dialog)</a></code> callback methods is with a 
<em>switch</em> statement that checks the <var>id</var> parameter that's passed into the method. 
Each <em>case</em> should check for a unique dialog ID and then create and define the respective Dialog.
For example, imagine a game that uses two different dialogs: one to indicate that the game
has paused and another to indicate that the game is over. First, define an integer ID for
each dialog:<br>
<span lang="EN-US" style="font-size:10.0pt;font-family:
宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;mso-hansi-font-family:&quot;Times New Roman&quot;;
mso-bidi-font-family:&quot;Times New Roman&quot;;mso-ansi-language:EN-US;mso-fareast-language:
EN-US;mso-bidi-language:AR-SA">定义</span><code><a href="../../../reference/android/app/Activity.html#onCreateDialog(int)">onCreateDialog(int)</a></code><span lang="EN-US" style="font-size:10.0pt;font-family:宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;
mso-hansi-font-family:&quot;Times New Roman&quot;;mso-bidi-font-family:&quot;Times New Roman&quot;;
mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">和</span><code><a href="../../../reference/android/app/Activity.html#onPrepareDialog(int, android.app.Dialog)">onPrepareDialog(int, Dialog)</a></code><span lang="EN-US" style="font-size:10.0pt;font-family:宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;
mso-hansi-font-family:&quot;Times New Roman&quot;;mso-bidi-font-family:&quot;Times New Roman&quot;;
mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">回调方法的最好方法是使用一个</span><em>switch</em> 
<span lang="EN-US" style="font-size:10.0pt;font-family:宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;
mso-hansi-font-family:&quot;Times New Roman&quot;;mso-bidi-font-family:&quot;Times New Roman&quot;;
mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">
语句，检查收到的</span><var>id</var><span lang="EN-US" style="font-size:10.0pt;font-family:宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;
mso-hansi-font-family:&quot;Times New Roman&quot;;mso-bidi-font-family:&quot;Times New Roman&quot;;
mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">参数。每一个 
</span> <em>case </em> 
<span lang="EN-US" style="font-size:10.0pt;font-family:宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;
mso-hansi-font-family:&quot;Times New Roman&quot;;mso-bidi-font-family:&quot;Times New Roman&quot;;
mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">
进行一个ID的对话框的创建和</span>对应Dialog<span lang="EN-US" style="font-size:10.0pt;font-family:宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;
mso-hansi-font-family:&quot;Times New Roman&quot;;mso-bidi-font-family:&quot;Times New Roman&quot;;
mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">的定义。例如，设想有这样一个游戏，使用两个不同的对话框，一个表示游戏暂停，另一个表示游戏结束。首先，为每个对话框设定一个整数的对话框</span><span lang="EN-US" style="font-size:10.0pt;font-family:&quot;Times New Roman&quot;;mso-fareast-font-family:
宋体;mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">ID</span><span lang="EN-US" style="font-size:10.0pt;font-family:宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;
mso-hansi-font-family:&quot;Times New Roman&quot;;mso-bidi-font-family:&quot;Times New Roman&quot;;
mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">：</span></p>
<pre>
static final int DIALOG_PAUSED_ID = 0;
static final int DIALOG_GAMEOVER_ID = 1;
</pre>

<p>Then, define the <code><a href="../../../reference/android/app/Activity.html#onCreateDialog(int)">onCreateDialog(int)</a></code> callback with a 
switch case for each ID:<br>
<span lang="EN-US" style="font-size:10.0pt;font-family:
宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;mso-hansi-font-family:&quot;Times New Roman&quot;;
mso-bidi-font-family:&quot;Times New Roman&quot;;mso-ansi-language:EN-US;mso-fareast-language:
EN-US;mso-bidi-language:AR-SA">然后，使用</span><span lang="EN-US" style="font-size:10.0pt;font-family:宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;
mso-hansi-font-family:&quot;Times New Roman&quot;;mso-bidi-font-family:&quot;Times New Roman&quot;;
mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">switch语句定义</span><code><a href="../../../reference/android/app/Activity.html#onCreateDialog(int)">onCreateDialog(int)</a></code><span lang="EN-US" style="font-size:10.0pt;font-family:宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;
mso-hansi-font-family:&quot;Times New Roman&quot;;mso-bidi-font-family:&quot;Times New Roman&quot;;
mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">方法，每一个</span><span lang="EN-US" style="font-size:10.0pt;font-family:&quot;Times New Roman&quot;;mso-fareast-font-family:
宋体;mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">ID</span><span lang="EN-US" style="font-size:10.0pt;font-family:宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;
mso-hansi-font-family:&quot;Times New Roman&quot;;mso-bidi-font-family:&quot;Times New Roman&quot;;
mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">一个 
case ：</span></p>
<pre>
protected Dialog onCreateDialog(int id) {
    Dialog dialog;
    switch(id) {
    case DIALOG_PAUSED_ID:
        // do the work to define the pause Dialog
        //<span lang="EN-US" style="font-size:10.0pt;font-family:
宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;mso-hansi-font-family:&quot;Times New Roman&quot;;
mso-bidi-font-family:&quot;Times New Roman&quot;;mso-ansi-language:EN-US;mso-fareast-language:
EN-US;mso-bidi-language:AR-SA">完成暂停对话框的定义</span>
        break;
    case DIALOG_GAMEOVER_ID:
        // do the work to define the game over Dialog
        //<span lang="EN-US" style="font-size:10.0pt;font-family:
宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;mso-hansi-font-family:&quot;Times New Roman&quot;;
mso-bidi-font-family:&quot;Times New Roman&quot;;mso-ansi-language:EN-US;mso-fareast-language:
EN-US;mso-bidi-language:AR-SA">完成游戏结束对话框的定义</span>
        break;
    default:
        dialog = null;
    }
    return dialog;
}
</pre>

<p class="note"><strong>Note:</strong> In this example, there's no code inside
the case statements because the procedure for defining your Dialog is outside the scope
of this section. See the section below about <a href="#AlertDialog">Creating an AlertDialog</a>,
offers code suitable for this example.<br>
<strong>注意：</strong><span lang="EN-US" style="font-size:10.0pt;font-family:
宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;mso-hansi-font-family:&quot;Times New Roman&quot;;
mso-bidi-font-family:&quot;Times New Roman&quot;;mso-ansi-language:EN-US;mso-fareast-language:
EN-US;mso-bidi-language:AR-SA">在这个例子中，因为如何定义对话框内容不在本节讨论范围，所以我们没在</span><span lang="EN-US" style="font-size:10.0pt;font-family:宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;
mso-hansi-font-family:&quot;Times New Roman&quot;;mso-bidi-font-family:&quot;Times New Roman&quot;;
mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">case中编写什么有意义的代码。参见下边的有关</span><a href="#AlertDialog">Creating an AlertDialog</a><span lang="EN-US" style="font-size:10.0pt;font-family:宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;
mso-hansi-font-family:&quot;Times New Roman&quot;;mso-bidi-font-family:&quot;Times New Roman&quot;;
mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">的章节，提供了适合这个例子的代码。</span></p>

<p>When it's time to show one of the dialogs, call <code><a href="../../../reference/android/app/Activity.html#showDialog(int)">showDialog(int)</a></code>
with the ID of a dialog:<br>
<span lang="EN-US" style="font-size:10.0pt;font-family:
宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;mso-hansi-font-family:&quot;Times New Roman&quot;;
mso-bidi-font-family:&quot;Times New Roman&quot;;mso-ansi-language:EN-US;mso-fareast-language:
EN-US;mso-bidi-language:AR-SA">当您要显示对话框时，使用对话框的</span><span lang="EN-US" style="font-size:10.0pt;font-family:&quot;Times New Roman&quot;;mso-fareast-font-family:
宋体;mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">ID</span><span lang="EN-US" style="font-size:10.0pt;font-family:宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;
mso-hansi-font-family:&quot;Times New Roman&quot;;mso-bidi-font-family:&quot;Times New Roman&quot;;
mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">调用</span> <code><a href="../../../reference/android/app/Activity.html#showDialog(int)">showDialog(int)</a></code><span lang="EN-US" style="font-size:10.0pt;font-family:宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;
mso-hansi-font-family:&quot;Times New Roman&quot;;mso-bidi-font-family:&quot;Times New Roman&quot;;
mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">。</span></p>
<pre>
showDialog(DIALOG_PAUSED_ID);
</pre>


<h2 id="DismissingADialog">Dismissing a Dialog——关闭一个对话框</h2>

<p>When you're ready to close your dialog, you can dismiss it by calling
<code><a href="../../../reference/android/app/Dialog.html#dismiss()">dismiss()</a></code> on the Dialog object.
If necessary, you can also call <code><a href="../../../reference/android/app/Activity.html#dismissDialog(int)">dismissDialog(int)</a></code> from the
Activity, which effectively calls <code><a href="../../../reference/android/app/Dialog.html#dismiss()">dismiss()</a></code> on the 
Dialog for you.<br>
<span lang="EN-US" style="font-size:10.0pt;font-family:
宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;mso-hansi-font-family:&quot;Times New Roman&quot;;
mso-bidi-font-family:&quot;Times New Roman&quot;;mso-ansi-language:EN-US;mso-fareast-language:
EN-US;mso-bidi-language:AR-SA">当您准备关闭您的对话框时，您调用对话框对象的</span>
<code><a href="../../../reference/android/app/Dialog.html#dismiss()">dismiss()</a></code><span lang="EN-US" style="font-size:10.0pt;font-family:宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;
mso-hansi-font-family:&quot;Times New Roman&quot;;mso-bidi-font-family:&quot;Times New Roman&quot;;
mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">方法将其关闭。如果必要的话，您也可以调用活动的</span> <code><a href="../../../reference/android/app/Activity.html#dismissDialog(int)">dismissDialog(int)</a></code><span lang="EN-US" style="font-size:10.0pt;font-family:宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;
mso-hansi-font-family:&quot;Times New Roman&quot;;mso-bidi-font-family:&quot;Times New Roman&quot;;
mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">方法，他会有效的为您调用对话框的</span><code><a href="../../../reference/android/app/Dialog.html#dismiss()">dismiss()</a></code><span lang="EN-US" style="font-size:10.0pt;font-family:宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;
mso-hansi-font-family:&quot;Times New Roman&quot;;mso-bidi-font-family:&quot;Times New Roman&quot;;
mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">方法。</span></p>

<p>If you are using <code><a href="../../../reference/android/app/Activity.html#onCreateDialog(int)">onCreateDialog(int)</a></code> to manage the state
of your dialogs (as discussed in the previous section), then every time your dialog is
dismissed, the state of the Dialog
object is retained by the Activity. If you decide that you will no longer need this object or 
it's important that the state is cleared, then you should call
<code><a href="../../../reference/android/app/Activity.html#removeDialog(int)">removeDialog(int)</a></code>. This will remove any internal references
to the object and if the dialog is showing, it will dismiss it.<br>
<span lang="EN-US" style="font-size:10.0pt;font-family:
宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;mso-hansi-font-family:&quot;Times New Roman&quot;;
mso-bidi-font-family:&quot;Times New Roman&quot;;mso-ansi-language:EN-US;mso-fareast-language:
EN-US;mso-bidi-language:AR-SA">如果您使用</span><code><a href="../../../reference/android/app/Activity.html#onCreateDialog(int)">onCreateDialog(int)</a></code><span lang="EN-US" style="font-size:10.0pt;font-family:宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;
mso-hansi-font-family:&quot;Times New Roman&quot;;mso-bidi-font-family:&quot;Times New Roman&quot;;
mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">来管理您的对话框的状态（像上节讨论的那样），那么每次退出一个对话框的时候，活动会保留对话框的状态。如果您觉得不会再需要这个对话框对象了，或者必须清楚上次保留状态，您可以调用</span><code><a href="../../../reference/android/app/Activity.html#removeDialog(int)">removeDialog(int)</a></code><span lang="EN-US" style="font-size:10.0pt;font-family:宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;
mso-hansi-font-family:&quot;Times New Roman&quot;;mso-bidi-font-family:&quot;Times New Roman&quot;;
mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">。如果对话框正在被显示，这个方法会删除所有内部的对对象的引用，然后对话框就会退出。</span></p>

<h3>Using dismiss listeners——<span lang="EN-US" style="font-size:10.0pt;font-family:
宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;mso-hansi-font-family:&quot;Times New Roman&quot;;
mso-bidi-font-family:&quot;Times New Roman&quot;;mso-ansi-language:EN-US;mso-fareast-language:
EN-US;mso-bidi-language:AR-SA">使用退出监听器</span></h3>

<p>If you'd like your applcation to perform some procedures the moment that a dialog is dismissed, 
then you should attach an on-dismiss listener to your Dialog.<br>
<span lang="EN-US" style="font-size:10.0pt;font-family:
宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;mso-hansi-font-family:&quot;Times New Roman&quot;;
mso-bidi-font-family:&quot;Times New Roman&quot;;mso-ansi-language:EN-US;mso-fareast-language:
EN-US;mso-bidi-language:AR-SA">如果您想要让您的应用程序在对话框退出时做出某些动作，则您应该将一个退出监听器附加到您的对话框中。</span></p>

<p>First define the <code><a href="../../../reference/android/content/DialogInterface.OnDismissListener.html">DialogInterface.OnDismissListener</a></code> interface.
This interface has just one method,
<code><a href="../../../reference/android/content/DialogInterface.OnDismissListener.html#onDismiss(android.content.DialogInterface)">onDismiss(DialogInterface)</a></code>, which
will be called when the dialog is dismissed.
Then simply pass your OnDismissListener implementation to 
<code><a href="../../../reference/android/app/Dialog.html#setOnDismissListener(android.content.DialogInterface.OnDismissListener)">setOnDismissListener()</a></code>.<br>
<span lang="EN-US" style="font-size:10.0pt;font-family:
宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;mso-hansi-font-family:&quot;Times New Roman&quot;;
mso-bidi-font-family:&quot;Times New Roman&quot;;mso-ansi-language:EN-US;mso-fareast-language:
EN-US;mso-bidi-language:AR-SA">首先定义</span><code><a href="../../../reference/android/content/DialogInterface.OnDismissListener.html">DialogInterface.OnDismissListener</a></code><span lang="EN-US" style="font-size:10.0pt;font-family:宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;
mso-hansi-font-family:&quot;Times New Roman&quot;;mso-bidi-font-family:&quot;Times New Roman&quot;;
mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">接口。这个接口只有一个方法，</span><code><a href="../../../reference/android/content/DialogInterface.OnDismissListener.html#onDismiss(android.content.DialogInterface)">onDismiss(DialogInterface)</a></code><span lang="EN-US" style="font-size:10.0pt;font-family:宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;
mso-hansi-font-family:&quot;Times New Roman&quot;;mso-bidi-font-family:&quot;Times New Roman&quot;;
mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">，这个方法会在对话框被关闭时被调用。然后您只需将</span>OnDismissListener<span lang="EN-US" style="font-size:10.0pt;font-family:宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;
mso-hansi-font-family:&quot;Times New Roman&quot;;mso-bidi-font-family:&quot;Times New Roman&quot;;
mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">实现传递给</span><code><a href="../../../reference/android/app/Dialog.html#setOnDismissListener(android.content.DialogInterface.OnDismissListener)">setOnDismissListener()</a></code><span lang="EN-US" style="font-size:10.0pt;font-family:宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;
mso-hansi-font-family:&quot;Times New Roman&quot;;mso-bidi-font-family:&quot;Times New Roman&quot;;
mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">。</span></p>

<p>However, note that dialogs can also be "cancelled." This is a special case that indicates
the dialog was explicitly cancelled by the user. This will occur if the user presses the 
"back" button to close the dialog, or if the dialog explicitly calls <code><a href="../../../reference/android/app/Dialog.html#cancel()">cancel()</a></code>
(perhaps from a "Cancel" button in the dialog). When a dialog is cancelled,
the OnDismissListener will still be notified, but if you'd like to be informed that the dialog
was explicitly cancelled (and not dismissed normally), then you should register 
an <code><a href="../../../reference/android/content/DialogInterface.OnCancelListener.html">DialogInterface.OnCancelListener</a></code> with
<code><a href="../../../reference/android/app/Dialog.html#setOnCancelListener(android.content.DialogInterface.OnCancelListener)">setOnCancelListener()</a></code>.<br>
<span lang="EN-US" style="font-size:10.0pt;font-family:
宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;mso-hansi-font-family:&quot;Times New Roman&quot;;
mso-bidi-font-family:&quot;Times New Roman&quot;;mso-ansi-language:EN-US;mso-fareast-language:
EN-US;mso-bidi-language:AR-SA">
但是，请注意对话框也有可能被“取消”。这是一种特殊情况，表明用户明确地取消了对话框。如果用户在对话框出现后按下</span><span lang="EN-US" style="font-size:10.0pt;font-family:&quot;Times New Roman&quot;;mso-fareast-font-family:
宋体;mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">BACK</span><span lang="EN-US" style="font-size:10.0pt;font-family:宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;
mso-hansi-font-family:&quot;Times New Roman&quot;;mso-bidi-font-family:&quot;Times New Roman&quot;;
mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">按键，或者对话框显式地调用了</span><code><a href="../../../reference/android/app/Dialog.html#cancel()">cancel()</a></code><span lang="EN-US" style="font-size:10.0pt;font-family:宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;
mso-hansi-font-family:&quot;Times New Roman&quot;;mso-bidi-font-family:&quot;Times New Roman&quot;;
mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">（比如在对话框的“取消”按钮中进行这个方法地调用）。当一个对话框被取消了，</span> 
OnDismissListener<span lang="EN-US" style="font-size:10.0pt;font-family:宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;
mso-hansi-font-family:&quot;Times New Roman&quot;;mso-bidi-font-family:&quot;Times New Roman&quot;;
mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">还是会得知对话框关闭，但是如果您想要得知对话框是被有意地取消（而不是正常情况下地关闭），您就需要使用</span><code><a href="../../../reference/android/app/Dialog.html#setOnCancelListener(android.content.DialogInterface.OnCancelListener)">setOnCancelListener()</a></code><span lang="EN-US" style="font-size:10.0pt;font-family:宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;
mso-hansi-font-family:&quot;Times New Roman&quot;;mso-bidi-font-family:&quot;Times New Roman&quot;;
mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">注册一个</span><code><a href="../../../reference/android/content/DialogInterface.OnCancelListener.html">DialogInterface.OnCancelListener</a></code><span lang="EN-US" style="font-size:10.0pt;font-family:宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;
mso-hansi-font-family:&quot;Times New Roman&quot;;mso-bidi-font-family:&quot;Times New Roman&quot;;
mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">。</span></p>


<h2 id="AlertDialog">Creating an AlertDialog——创建一个告警对话框</h2>

<p>An <code><a href="../../../reference/android/app/AlertDialog.html">AlertDialog</a></code> is an extension of the <code><a href="../../../reference/android/app/Dialog.html">Dialog</a></code>
class. It is capable of constructing most dialog user interfaces and is the suggested dialog type.
You should use it for dialogs that use any of the following features:<br>
<code><a href="../../../reference/android/app/AlertDialog.html">AlertDialog</a></code><span lang="EN-US" style="font-size:10.0pt;font-family:
宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;mso-hansi-font-family:&quot;Times New Roman&quot;;
mso-bidi-font-family:&quot;Times New Roman&quot;;mso-ansi-language:EN-US;mso-fareast-language:
EN-US;mso-bidi-language:AR-SA">是</span><code><a href="../../../reference/android/app/Dialog.html">Dialog</a></code>
<span lang="EN-US" style="font-size:10.0pt;font-family:宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;
mso-hansi-font-family:&quot;Times New Roman&quot;;mso-bidi-font-family:&quot;Times New Roman&quot;;
mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">
类地继承类。使用他可以构造大多数的对话框用户界面，并且是推荐的对话框类型。您可以在对话框中使用下边地功能：</span></p>
<ul>
  <li>A title<br>
	标题</li>
  <li>A text message<br>
	文字信息</li>
  <li>One, two, or three buttons<br>
	一个，两个，或三个按钮</li>
  <li>A list of selectable items (with optional checkboxes or radio buttons)<br>
	<span lang="EN-US" style="font-size:10.0pt;font-family:
宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;mso-hansi-font-family:&quot;Times New Roman&quot;;
mso-bidi-font-family:&quot;Times New Roman&quot;;mso-ansi-language:EN-US;mso-fareast-language:
EN-US;mso-bidi-language:AR-SA">一个列表，包含了可供选择地项目（可以选择带选框的多选列表或者，单选按钮）</span></li>
</ul>

<p>To create an AlertDialog, use the <code><a href="../../../reference/android/app/AlertDialog.Builder.html">AlertDialog.Builder</a></code> subclass.
Get a Builder with <code><a href="../../../reference/android/app/AlertDialog.Builder.html#AlertDialog.Builder(android.content.Context)">AlertDialog.Builder(Context)</a></code> and
then use the class's public methods to define all of the
AlertDialog properties. After you're done with the Builder, retrieve the 
AlertDialog object with <code><a href="../../../reference/android/app/AlertDialog.Builder.html#create()">create()</a></code>.<br>
<span lang="EN-US" style="font-size:10.0pt;font-family:
宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;mso-hansi-font-family:&quot;Times New Roman&quot;;
mso-bidi-font-family:&quot;Times New Roman&quot;;mso-ansi-language:EN-US;mso-fareast-language:
EN-US;mso-bidi-language:AR-SA">您需要使用</span><code><a href="../../../reference/android/app/AlertDialog.Builder.html">AlertDialog.Builder</a></code><span lang="EN-US" style="font-size:10.0pt;font-family:宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;
mso-hansi-font-family:&quot;Times New Roman&quot;;mso-bidi-font-family:&quot;Times New Roman&quot;;
mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">子类来创建一个</span>AlertDialog<span lang="EN-US" style="font-size:10.0pt;font-family:宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;
mso-hansi-font-family:&quot;Times New Roman&quot;;mso-bidi-font-family:&quot;Times New Roman&quot;;
mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">。使用</span><code><a href="../../../reference/android/app/AlertDialog.Builder.html#AlertDialog.Builder(android.content.Context)">AlertDialog.Builder(Context)</a></code><span lang="EN-US" style="font-size:10.0pt;font-family:宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;
mso-hansi-font-family:&quot;Times New Roman&quot;;mso-bidi-font-family:&quot;Times New Roman&quot;;
mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">创建一个</span>Builder
<span lang="EN-US" style="font-size:10.0pt;font-family:宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;
mso-hansi-font-family:&quot;Times New Roman&quot;;mso-bidi-font-family:&quot;Times New Roman&quot;;
mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">
，然后使用</span>Builder<span lang="EN-US" style="font-size:10.0pt;font-family:宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;
mso-hansi-font-family:&quot;Times New Roman&quot;;mso-bidi-font-family:&quot;Times New Roman&quot;;
mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">的公共方法定义所有的告警对话框的属性。</span>Builder<span lang="EN-US" style="font-size:10.0pt;font-family:宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;
mso-hansi-font-family:&quot;Times New Roman&quot;;mso-bidi-font-family:&quot;Times New Roman&quot;;
mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">的属性设置好后，您要使用</span><code><a href="../../../reference/android/app/AlertDialog.Builder.html#create()">create()</a></code><span lang="EN-US" style="font-size:10.0pt;font-family:宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;
mso-hansi-font-family:&quot;Times New Roman&quot;;mso-bidi-font-family:&quot;Times New Roman&quot;;
mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">获取</span>AlertDialog<span lang="EN-US" style="font-size:10.0pt;font-family:宋体;mso-ascii-font-family:&quot;Times New Roman&quot;;
mso-hansi-font-family:&quot;Times New Roman&quot;;mso-bidi-font-family:&quot;Times New Roman&quot;;
mso-ansi-language:EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">对象。</span></p>

<p>The following topics show how to define various properties of the AlertDialog using the
AlertDialog.Builder class. If you use any of the following sample code inside your 
<code><a href="../../../reference/android/app/Activity.html#onCreateDialog(int)">onCreateDialog()</a></code> callback method, 
you can return the resulting Dialog object to display the dialog.<br>
<span lang="EN-US">下面的话题展示了如何使用</span>AlertDialog.Builder<span lang="EN-US">类定义定义告警对话框的各种属性。如果您在您的</span><code><a href="../../../reference/android/app/Activity.html#onCreateDialog(int)">onCreateDialog()</a></code><span lang="EN-US">回调方法中使用了下面示例代码，您需要返回Dialog对象来显示他。</span></p>


<h3 id="AddingButtons">Adding buttons——添加按钮</h3>

<img src="../../../images/dialog_buttons.png" alt="" style="float:right" />

<p>To create an AlertDialog with side-by-side buttons like the one shown in the screenshot to the right,
use the <code>set...Button()</code> methods:<br>
<span lang="EN-US">要创建一个像右边截图中显示的有 并排按钮的告警对话框，请使用</span><code>set...Button()</code><span lang="EN-US">方法：</span></p>

<pre>
AlertDialog.Builder builder = new AlertDialog.Builder(this);
builder.setMessage("Are you sure you want to exit?")
       .setCancelable(false)
       .setPositiveButton("Yes", new DialogInterface.OnClickListener() {
           public void onClick(DialogInterface dialog, int id) {
                MyActivity.this.finish();
           }
       })
       .setNegativeButton("No", new DialogInterface.OnClickListener() {
           public void onClick(DialogInterface dialog, int id) {
                dialog.cancel();
           }
       });
AlertDialog alert = builder.create();
</pre>

<p>First, add a message for the dialog with 
<code><a href="../../../reference/android/app/AlertDialog.Builder.html#setMessage(java.lang.CharSequence)">setMessage(CharSequence)</a></code>. Then, begin
method-chaining and set the dialog
to be <em>not cancelable</em> (so the user cannot close the dialog with the back button)
with <code><a href="../../../reference/android/app/AlertDialog.Builder.html#setCancelable(boolean)">setCancelable(boolean)</a></code>. For each button, 
use one of the <code>set...Button()</code> methods, such as
<code><a href="../../../reference/android/app/AlertDialog.Builder.html#setPositiveButton(java.lang.CharSequence, android.content.DialogInterface.OnClickListener)">setPositiveButton()</a></code>, that accepts the name for the button and a 
<code><a href="../../../reference/android/content/DialogInterface.OnClickListener.html">DialogInterface.OnClickListener</a></code> that defines the action to take 
when the user selects the button.<br>
<span lang="EN-US">首先，使用</span><code><a href="../../../reference/android/app/AlertDialog.Builder.html#setMessage(java.lang.CharSequence)">setMessage(CharSequence)</a></code><span lang="EN-US">向对话框添加文字信息。然后，进行<span>&nbsp;&nbsp;
</span>方法链接和使用</span> <code><a href="../../../reference/android/app/AlertDialog.Builder.html#setCancelable(boolean)">setCancelable(boolean)</a></code><span lang="EN-US">进行的不可取消（用户就不能使用BACK键取消对话框了）的<span>&nbsp;&nbsp;
</span>设置。对每一个按钮，使用一个</span> <code>set...Button()</code><span lang="EN-US">方法，比如，</span><code><a href="../../../reference/android/app/AlertDialog.Builder.html#setPositiveButton(java.lang.CharSequence, android.content.DialogInterface.OnClickListener)">setPositiveButton()</a></code><span lang="EN-US">就是接收按钮的名称还有</span><code><a href="../../../reference/android/content/DialogInterface.OnClickListener.html">DialogInterface.OnClickListener</a></code><span lang="EN-US">。</span><code><a href="../../../reference/android/content/DialogInterface.OnClickListener.html">DialogInterface.OnClickListener</a></code><span lang="EN-US">定义了用户点击按钮时的动作。</span></p>

<p class="note"><strong>Note:</strong> You can only add one of each button type to the
AlertDialog. That is, you cannot have more than one "positive" button. This limits the number
of possible buttons to three: positive, neutral, and negative. These names are technically irrelevant to the
actual functionality of your buttons, but should help you keep track of which one does what.<br>
<strong>注意：</strong><span lang="EN-US">一种按钮类型您只能向一个告警对话框中添加一个。就是说，您不能添加多个“确认”按钮。有数量限制的按钮是：确认，中立，拒绝。这些名字和您的按钮的实际作用在技术上是无关的，但是能帮助您跟踪每一个做什么。</span></p>


<h3 id="AddingAList">Adding a list——添加一个列表</h3>

<img src="../../../images/dialog_list.png" alt="" style="float:right" />

<p>To create an AlertDialog with a list of selectable items like the one shown to the right, 
use the <code>setItems()</code> method:<br>
<span lang="EN-US">创建一个像右边显示的带有可选择项目的列表的对话框，您可以使用</span><code>setItems()</code><span lang="EN-US">方法。</span></p>

<pre>
final CharSequence[] items = {"Red", "Green", "Blue"};

AlertDialog.Builder builder = new AlertDialog.Builder(this);
builder.setTitle("Pick a color");
builder.setItems(items, new DialogInterface.OnClickListener() {
    public void onClick(DialogInterface dialog, int item) {
        Toast.makeText(getApplicationContext(), items[item], Toast.LENGTH_SHORT).show();
    }
});
AlertDialog alert = builder.create();
</pre>

<p>First, add a title to the dialog with 
<code><a href="../../../reference/android/app/AlertDialog.Builder.html#setTitle(java.lang.CharSequence)">setTitle(CharSequence)</a></code>. 
Then, add a list of selectable items with
<code><a href="../../../reference/android/app/AlertDialog.Builder.html#setItems(java.lang.CharSequence[], android.content.DialogInterface.OnClickListener)">setItems()</a></code>, which accepts the array of items to display and a 
<code><a href="../../../reference/android/content/DialogInterface.OnClickListener.html">DialogInterface.OnClickListener</a></code> that defines the action to take 
when the user selects an item.<br>
<span lang="EN-US">首先，使用</span><code><a href="../../../reference/android/app/AlertDialog.Builder.html#setTitle(java.lang.CharSequence)">setTitle(CharSequence)</a></code><span lang="EN-US">为对话框添加标题。然后，使用</span><code><a href="../../../reference/android/app/AlertDialog.Builder.html#setItems(java.lang.CharSequence[], android.content.DialogInterface.OnClickListener)">setItems()</a></code><span lang="EN-US">向对话框中添加可选项目的列表，</span><code><a href="../../../reference/android/app/AlertDialog.Builder.html#setItems(java.lang.CharSequence[], android.content.DialogInterface.OnClickListener)">setItems()</a></code><span lang="EN-US">接收要显示的列表的数组和 
定义了用户选择项目之后的动作的</span><code><a href="../../../reference/android/content/DialogInterface.OnClickListener.html">DialogInterface.OnClickListener</a></code><span lang="EN-US">。</span></p>


<h4>Adding checkboxes and radio buttons——添加&nbsp;&nbsp; 带复选框得选择列表 或&nbsp; 单选按钮</h4>

&nbsp;<p>To create a list of multiple-choice items (checkboxes) or 
single-choice items (radio buttons) inside the dialog, use the
<code><a href="../../../reference/android/app/AlertDialog.Builder.html#setMultiChoiceItems(android.database.Cursor, java.lang.String, java.lang.String, android.content.DialogInterface.OnMultiChoiceClickListener)">setMultiChoiceItems()</a></code> and 
<code><a href="../../../reference/android/app/AlertDialog.Builder.html#setSingleChoiceItems(int, int, android.content.DialogInterface.OnClickListener)">setSingleChoiceItems()</a></code> methods, respectively.
If you create one of these selectable lists in the
<code><a href="../../../reference/android/app/Activity.html#onCreateDialog(int)">onCreateDialog()</a></code> callback method,
Android manages the state of the list for you. As long as the Activity is active, 
the dialog remembers the items that were previously selected, but when the user exits the
Activity, the selection is lost.

<br>
	<span lang="EN-US">在对话框中创建一个多项选择（checkboxes）的列表或者单选按钮（radio buttons），您可以分别使用</span><code><a href="../../../reference/android/app/AlertDialog.Builder.html#setMultiChoiceItems(android.database.Cursor, java.lang.String, java.lang.String, android.content.DialogInterface.OnMultiChoiceClickListener)">setMultiChoiceItems()</a> </code> 
	<span lang="EN-US">或 </span> 
<code><a href="../../../reference/android/app/AlertDialog.Builder.html#setSingleChoiceItems(int, int, android.content.DialogInterface.OnClickListener)">setSingleChoiceItems()</a></code><span lang="EN-US">方法。如果您在</span><code><a href="../../../reference/android/app/Activity.html#onCreateDialog(int)">onCreateDialog()</a></code><span lang="EN-US">回调方法中创建这些可选列表，Android会为您管理列表的状态。在活动激活的状态下，对话框会记住您上次选择的选项，但是用户推出活动后，记录的选择项就丢失了。</span><p class="note"><strong>Note:</strong> To save the selection when the user leaves or
pauses the Activity, you must properly save and restore the setting throughout
the <a href="../../../guide/topics/fundamentals.html#lcycles">Activity Lifecycle</a>. 
To permanently save the selections, even when the Activity process is completely shutdown, 
you need to save the settings
with one of the <a href="../../../guide/topics/data/data-storage.html">Data
Storage</a> techniques.<br>
	<strong>注意：</strong><span lang="EN-US">记录用户离开或暂停活动时的选择项，您需要通过</span><a href="../../../guide/topics/fundamentals.html#lcycles">Activity Lifecycle</a><span lang="EN-US">方法进行正确的存储和还原。如要<span>&nbsp;
	</span>在即便活动的进程完全关闭的情况下也能<span>&nbsp;&nbsp; </span>永久的存储选项，您需要使用</span><a href="../../../guide/topics/data/data-storage.html">Data
Storage</a><span lang="EN-US">技术保存选择项。</span><img src="../../../images/dialog_singlechoicelist.png" alt="" style="float:right" /></p>

<p>To create an AlertDialog with a list of single-choice items like the one shown to the right,
use the same code from the previous example, but replace the <code>setItems()</code> method with
<code><a href="../../../reference/android/app/AlertDialog.Builder.html#setSingleChoiceItems(int, int, android.content.DialogInterface.OnClickListener)">setSingleChoiceItems()</a></code>:<br>
<span lang="EN-US">创建一个像右边所示带有单选按钮列表的告警对话框，可以使用上一个示例代码，但是，您需要将</span><code>setItems()</code><span lang="EN-US">方法替换为</span><code><a href="../../../reference/android/app/AlertDialog.Builder.html#setSingleChoiceItems(int, int, android.content.DialogInterface.OnClickListener)">setSingleChoiceItems()</a></code><span lang="EN-US">：</span></p>

<pre>
final CharSequence[] items = {"Red", "Green", "Blue"};

AlertDialog.Builder builder = new AlertDialog.Builder(this);
builder.setTitle("Pick a color");
builder.setSingleChoiceItems(items, -1, new DialogInterface.OnClickListener() {
    public void onClick(DialogInterface dialog, int item) {
        Toast.makeText(getApplicationContext(), items[item], Toast.LENGTH_SHORT).show();
    }
});
AlertDialog alert = builder.create();
</pre>

<p>The second parameter in the
<code><a href="../../../reference/android/app/AlertDialog.Builder.html#setSingleChoiceItems(java.lang.CharSequence[], int, android.content.DialogInterface.OnClickListener)">setSingleChoiceItems()</a></code> method is an integer value for the <var>checkedItem</var>, which indicates the 
zero-based list position of the default selected item. Use "-1" to indicate that no item should be 
selected by default.<br>
<code><a href="../../../reference/android/app/AlertDialog.Builder.html#setSingleChoiceItems(java.lang.CharSequence[], int, android.content.DialogInterface.OnClickListener)">setSingleChoiceItems()</a></code><span lang="EN-US">方法中的第二个参数是</span><var>checkedItem</var><span lang="EN-US">的整数值，从零开始计数。使用“</span><st1:chmetcnv
UnitName="”" SourceValue="1" HasSpace="False" Negative="True" NumberType="1"
TCSC="0" w:st="on"><span lang="EN-US">-1”</span></st1:chmetcnv><span lang="EN-US">代表没有默认选择值。</span></p>


<h2 id="ProgressDialog">Creating a ProgressDialog——创建一个进度对话框</h2>

<img src="../../../images/dialog_progress_spinning.png" alt="" style="float:right" />

<p>A <code><a href="../../../reference/android/app/ProgressDialog.html">ProgressDialog</a></code> is an extension of the <code><a href="../../../reference/android/app/AlertDialog.html">AlertDialog</a></code>
class that can display a progress animation in the form of a spinning wheel, for a task with
progress that's undefined, or a progress bar, for a task that has a defined progression.
The dialog can also provide buttons, such as one to cancel a download.<br>
<code><a href="../../../reference/android/app/ProgressDialog.html">ProgressDialog</a></code><span lang="EN-US">是</span><code><a href="../../../reference/android/app/AlertDialog.html">AlertDialog</a></code><span lang="EN-US">类的继承类，没有定义进度的任务以转轮、定义任务进度的以进度条<span>&nbsp;&nbsp;
</span>的形式显示有关进度的动画，进度条对话框也可以提供按钮，比如取消下载的按钮。</span></p>

<p>Opening a progress dialog can be as simple as calling 
<code><a href="../../../reference/android/app/ProgressDialog.html#show(android.content.Context, java.lang.CharSequence, java.lang.CharSequence)">ProgressDialog.show()</a></code>. For example, the progress dialog shown to the right can be 
easily achieved without managing the dialog through the 
<code><a href="../../../reference/android/app/Activity.html#onCreateDialog(int)">onCreateDialog(int)</a></code> callback,
as shown here:<br>
<span lang="EN-US">通过调用</span><code><a href="../../../reference/android/app/ProgressDialog.html#show(android.content.Context, java.lang.CharSequence, java.lang.CharSequence)">ProgressDialog.show()</a></code><span lang="EN-US">就可以很简单地打开一个进度对话框。例如，右边显示的进度对话框实现起来很简单，不用调用</span><code><a href="../../../reference/android/app/Activity.html#onCreateDialog(int)">onCreateDialog(int)</a></code><span lang="EN-US">来对对话框进行管理，示例代码：</span></p>

<pre>
ProgressDialog dialog = ProgressDialog.show(MyActivity.this, "", 
                        "Loading. Please wait...", true);
</pre>

<p>The first parameter is the application <code><a href="../../../reference/android/content/Context.html">Context</a></code>, 
the second is a title for the dialog (left empty), the third is the message, 
and the last parameter is whether the progress
is indeterminate (this is only relevant when creating a progress bar, which is
discussed in the next section).
<br>
第<span lang="EN-US">一个参数是应用程序的</span><code><a href="../../../reference/android/content/Context.html">Context</a></code><span lang="EN-US">，第二个参数是对话框的标题（示例中留空），第三个是现实的文字信息，最后一个是任务是否有明确进度（只在创建进度条是有用，有关内用在下节讨论）。</span></p>

<p>The default style of a progress dialog is the spinning wheel.
If you want to create a progress bar that shows the loading progress with granularity,
some more code is required, as discussed in the next section.<br>
<span lang="EN-US">默认的进度对话框的样式是转轮式。如果您想要创建用一个个间隔的方块显示的进度条，您需要编写更多的代码，参见下边章节。</span></p>


<h3 id="ShowingAProgressBar">Showing a progress bar——显示一个进度条形式的进度对话框</h3>

<img src="../../../images/dialog_progress_bar.png" alt="Dialog" style="float:right" width="200" height="111" />

<p>To show the progression with an animated progress bar:<br>
<span lang="EN-US" style="font-size:9.0pt;font-family:
宋体;mso-ascii-font-family:Arial;mso-hansi-font-family:Arial;mso-bidi-font-family:
&quot;Times New Roman&quot;;mso-ansi-language:EN-US;mso-fareast-language:EN-US;
mso-bidi-language:AR-SA">用带动画的进度条显示进度：</span><span lang="EN-US">用带动画的进度条显示进度：</span></p>

<ol>
  <li>Initialize the 
    ProgressDialog with the class constructor, 
    <code><a href="../../../reference/android/app/ProgressDialog.html#ProgressDialog(android.content.Context)">ProgressDialog(Context)</a></code>.<br>
	<span lang="EN-US" style="font-size:9.0pt;font-family:
宋体;mso-ascii-font-family:Arial;mso-hansi-font-family:Arial;mso-bidi-font-family:
&quot;Times New Roman&quot;;mso-ansi-language:EN-US;mso-fareast-language:EN-US;
mso-bidi-language:AR-SA">使用类的构建器，</span><code><a href="../../../reference/android/app/ProgressDialog.html#ProgressDialog(android.content.Context)">ProgressDialog(Context)</a></code><span lang="EN-US" style="font-size:9.0pt;font-family:宋体;mso-ascii-font-family:Arial;
mso-hansi-font-family:Arial;mso-bidi-font-family:&quot;Times New Roman&quot;;mso-ansi-language:
EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">，进行进度对话框的初始化。</span></li>
  <li>Set the progress style to "STYLE_HORIZONTAL" with 
    <code><a href="../../../reference/android/app/ProgressDialog.html#setProgressStyle(int)">setProgressStyle(int)</a></code> and 
    set any other properties, such as the message.<br>
	<span lang="EN-US" style="font-size:9.0pt;font-family:
宋体;mso-ascii-font-family:Arial;mso-hansi-font-family:Arial;mso-bidi-font-family:
&quot;Times New Roman&quot;;mso-ansi-language:EN-US;mso-fareast-language:EN-US;
mso-bidi-language:AR-SA">使用</span><code><a href="../../../reference/android/app/ProgressDialog.html#setProgressStyle(int)">setProgressStyle(int)</a></code><span lang="EN-US" style="font-size:9.0pt;font-family:宋体;mso-ascii-font-family:Arial;
mso-hansi-font-family:Arial;mso-bidi-font-family:&quot;Times New Roman&quot;;mso-ansi-language:
EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">设置进度显示样式为</span>&quot;STYLE_HORIZONTAL&quot;
	<span lang="EN-US" style="font-size:9.0pt;
font-family:宋体;mso-ascii-font-family:Arial;mso-hansi-font-family:Arial;
mso-bidi-font-family:&quot;Times New Roman&quot;;mso-ansi-language:EN-US;mso-fareast-language:
EN-US;mso-bidi-language:AR-SA">，然后设置其他属性，例如文字信息。</span></li>
  <li>When you're ready to show the dialog, call 
    <code><a href="../../../reference/android/app/Dialog.html#show()">show()</a></code> or return the ProgressDialog from the  
    <code><a href="../../../reference/android/app/Activity.html#onCreateDialog(int)">onCreateDialog(int)</a></code> callback.<br>
	<span lang="EN-US" style="font-size:9.0pt;font-family:
宋体;mso-ascii-font-family:Arial;mso-hansi-font-family:Arial;mso-bidi-font-family:
&quot;Times New Roman&quot;;mso-ansi-language:EN-US;mso-fareast-language:EN-US;
mso-bidi-language:AR-SA">当您准备好显示对话框时，调用</span><code><a href="../../../reference/android/app/Dialog.html#show()">show()</a></code><span lang="EN-US" style="font-size:9.0pt;
font-family:宋体;mso-ascii-font-family:Arial;mso-hansi-font-family:Arial;
mso-bidi-font-family:&quot;Times New Roman&quot;;mso-ansi-language:EN-US;mso-fareast-language:
EN-US;mso-bidi-language:AR-SA">，或者从</span><code><a href="../../../reference/android/app/Activity.html#onCreateDialog(int)">onCreateDialog(int)</a></code><span lang="EN-US" style="font-size:9.0pt;font-family:宋体;mso-ascii-font-family:Arial;
mso-hansi-font-family:Arial;mso-bidi-font-family:&quot;Times New Roman&quot;;mso-ansi-language:
EN-US;mso-fareast-language:EN-US;mso-bidi-language:AR-SA">中返回</span>ProgressDialog<span lang="EN-US" style="font-size: 9.0pt; mso-ascii-font-family: Arial; mso-hansi-font-family: Arial; mso-bidi-font-family: &quot;Times New Roman&quot;; mso-ansi-language: EN-US; mso-fareast-language: EN-US; mso-bidi-language: AR-SA">。</span></li>
  <li>You can increment the amount of progress displayed
    in the bar by calling either <code><a href="../../../reference/android/app/ProgressDialog.html#setProgress(int)">setProgress(int)</a></code> with a value for 
    the total percentage completed so far or <code><a href="../../../reference/android/app/ProgressDialog.html#incrementProgressBy(int)">incrementProgressBy(int)</a></code>
    with an incremental value to add to the total percentage completed so far.<br>
	<span lang="EN-US" style="font-size:9.0pt;font-family:
宋体;mso-ascii-font-family:Arial;mso-hansi-font-family:Arial;mso-bidi-font-family:
&quot;Times New Roman&quot;;mso-ansi-language:EN-US;mso-fareast-language:EN-US;
mso-bidi-language:AR-SA">如果您想增加进度条显示的进度，您可以将至今的完成百分数传入<code><a href="../../../reference/android/app/ProgressDialog.html#setProgress(int)">setProgress(int)</a></code>，或者将增加的进度百分数传入<code><a href="../../../reference/android/app/ProgressDialog.html#incrementProgressBy(int)">incrementProgressBy(int)</a></code>。</span></li>
</ol>

<p>For example, your setup might look like this:<br>
<span lang="EN-US">例如，您可以这样设置您的进度对话框：</span></p>
<pre>
ProgressDialog progressDialog;
progressDialog = new ProgressDialog(mContext);
progressDialog.setProgressStyle(ProgressDialog.STYLE_HORIZONTAL);
progressDialog.setMessage("Loading...");
progressDialog.setCancelable(false);
</pre>

<p>The setup is simple. Most of the code needed to create a progress dialog is actually 
involved in the process that updates it. You might find that it's
necessary to create a second thread in your application for this work and then report the progress
back to the Activity's UI thread with a <code><a href="../../../reference/android/os/Handler.html">Handler</a></code> object. 
If you're not familiar with using additional 
threads with a Handler, see the example Activity below that uses a second thread to
increment a progress dialog managed by the Activity.<br>
<span lang="EN-US">
上面的设置是很简单的。实际上创建进度对话框的代码集中在更新进度状态上。您会发现您需要在您的应用程序中新建一个线程监视进度然后通过一个</span><code><a href="../../../reference/android/os/Handler.html">Handler</a></code><span lang="EN-US">对象将进度报告给活动UI线程。如果您不熟悉如何使用带有</span>Handler<span lang="EN-US">的额外线程，参考下面由活动管理的使用第二线程增加进度的例子。</span></p>

<script type="text/javascript">
function toggleDiv(link) {
  var toggleable = $(link).parent();
  if (toggleable.hasClass("closed")) {
    $(".toggleme", toggleable).slideDown("fast");
    toggleable.removeClass("closed");
    toggleable.addClass("open");
    $(".toggle-img", toggleable).attr("title", "hide").attr("src", "/assets/images/triangle-opened.png");
  } else {
    $(".toggleme", toggleable).slideUp("fast");
    toggleable.removeClass("open");
    toggleable.addClass("closed");
    $(".toggle-img", toggleable).attr("title", "show").attr("src", "/assets/images/triangle-closed.png");
  }
  return false;
}
</script>
<style>
.toggleme {
  padding:0 0 1px 0;
}
.toggleable a {
  text-decoration:none;
}
.toggleable.closed .toggleme {
  display:none;
}
#jd-content .toggle-img {
  margin:0;
}
</style>

<div class="toggleable closed">
  <a href="#" onclick="return toggleDiv(this)">
        <img src="/assets/images/triangle-closed.png" class="toggle-img" />
        <strong>Example ProgressDialog with a second thread</strong></a>
  <div class="toggleme">
        <p>This example uses a second thread to track the progress of a process (which actually just
counts up to 100). The thread sends a <code><a href="../../../reference/android/os/Message.html">Message</a></code> back to the main
Activity through a <code><a href="../../../reference/android/os/Handler.html">Handler</a></code> each time progress is made. The main Activity then updates the 
ProgressDialog.</p>

<pre>
package com.example.progressdialog;

import android.app.Activity;
import android.app.Dialog;
import android.app.ProgressDialog;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;

public class NotificationTest extends Activity {
    static final int PROGRESS_DIALOG = 0;
    Button button;
    ProgressThread progressThread;
    ProgressDialog progressDialog;
   
    /** Called when the activity is first created. */
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.main);

        // Setup the button that starts the progress dialog
        button = (Button) findViewById(R.id.progressDialog);
        button.setOnClickListener(new OnClickListener(){
            public void onClick(View v) {
                showDialog(PROGRESS_DIALOG);
            }
        }); 
    }
   
    protected Dialog onCreateDialog(int id) {
        switch(id) {
        case PROGRESS_DIALOG:
            progressDialog = new ProgressDialog(NotificationTest.this);
            progressDialog.setProgressStyle(ProgressDialog.STYLE_HORIZONTAL);
            progressDialog.setMessage("Loading...");
            progressThread = new ProgressThread(handler);
            progressThread.start();
            return progressDialog;
        default:
            return null;
        }
    }

    // Define the Handler that receives messages from the thread and update the progress
    final Handler handler = new Handler() {
        public void handleMessage(Message msg) {
            int total = msg.getData().getInt("total");
            progressDialog.setProgress(total);
            if (total >= 100){
                dismissDialog(PROGRESS_DIALOG);
                progressThread.setState(ProgressThread.STATE_DONE);
            }
        }
    };

    /** Nested class that performs progress calculations (counting) */
    private class ProgressThread extends Thread {
        Handler mHandler;
        final static int STATE_DONE = 0;
        final static int STATE_RUNNING = 1;
        int mState;
        int total;
       
        ProgressThread(Handler h) {
            mHandler = h;
        }
       
        public void run() {
            mState = STATE_RUNNING;   
            total = 0;
            while (mState == STATE_RUNNING) {
                try {
                    Thread.sleep(100);
                } catch (InterruptedException e) {
                    Log.e("ERROR", "Thread Interrupted");
                }
                Message msg = mHandler.obtainMessage();
                Bundle b = new Bundle();
                b.putInt("total", total);
                msg.setData(b);
                mHandler.sendMessage(msg);
                total++;
            }
        }
        
        /* sets the current state for the thread,
         * used to stop the thread */
        public void setState(int state) {
            mState = state;
        }
    }
}
</pre>
  </div> <!-- end toggleme -->
	——<span lang="EN-US">使用第二进程的<a href="#" onclick="return toggleDiv(this)"><strong>ProgressDialog</strong></a>的例子</span></div> <!-- end toggleable -->



<h2 id="CustomDialog">Creating a Custom Dialog——<span lang="EN-US">创建一个个性化的对话框</span></h2>

<img src="../../../images/dialog_custom.png" alt="" style="float:right" />

<p>If you want a customized design for a dialog, you can create your own layout
for the dialog window with layout and widget elements.
After you've defined your layout, pass the root View object or
layout resource ID to <code><a href="../../../reference/android/app/Dialog.html#setContentView(android.view.View)">setContentView(View)</a></code>.<br>
<span lang="EN-US">如果您想要为活动创建一个个性化的对话框，您可以创建自己的带有<span>&nbsp; </span>布局和控件元素<span>&nbsp;
</span>的对话框窗口布局。您在定义好布局之后，需要将根View对象或布局资源</span>ID<span lang="EN-US">传递给</span><code><a href="../../../reference/android/app/Dialog.html#setContentView(android.view.View)">setContentView(View)</a></code><span lang="EN-US">。</span></p>

<p>For example, to create the dialog shown to the right:<br>
<span lang="EN-US">例如，创建一个右图所示的对话框：</span></p>

<ol>
  <li>Create an XML layout saved as <code>custom_dialog.xml</code>:
<br>
	<span lang="EN-US">创建一个布局文件，然后保存为<code>custom_dialog.xml</code>：</span><pre>
&lt;LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
              android:id="@+id/layout_root"
              android:orientation="horizontal"
              android:layout_width="fill_parent"
              android:layout_height="fill_parent"
              android:padding="10dp"
              >
    &lt;ImageView android:id="@+id/image"
               android:layout_width="wrap_content"
               android:layout_height="fill_parent"
               android:layout_marginRight="10dp"
               />
    &lt;TextView android:id="@+id/text"
              android:layout_width="wrap_content"
              android:layout_height="fill_parent"
              android:textColor="#FFF"
              />
&lt;/LinearLayout>
</pre>

    <p>This XML defines an <code><a href="../../../reference/android/widget/ImageView.html">ImageView</a></code> and a <code><a href="../../../reference/android/widget/TextView.html">TextView</a></code>
    inside a <code><a href="../../../reference/android/widget/LinearLayout.html">LinearLayout</a></code>.<br>
	<span lang="EN-US">这个</span> XML <span lang="EN-US">文件在</span><code><a href="../../../reference/android/widget/LinearLayout.html">LinearLayout</a></code><span lang="EN-US">中定义了</span><code><a href="../../../reference/android/widget/ImageView.html">ImageView</a></code><span lang="EN-US">和</span><code><a href="../../../reference/android/widget/TextView.html">TextView</a></code><span lang="EN-US">。</span></p>
  <li>Set the above layout as the dialog's content view and define the content 
    for the ImageView and TextView elements:<br>
	<span lang="EN-US">将上边的布局设定为对话框的显示内容，然后定义ImageView和TextView元素的内容。</span></p>
<pre>
Context mContext = getApplicationContext();
Dialog dialog = new Dialog(mContext);

dialog.setContentView(R.layout.custom_dialog);
dialog.setTitle("Custom Dialog");

TextView text = (TextView) dialog.findViewById(R.id.text);
text.setText("Hello, this is a custom dialog!");
ImageView image = (ImageView) dialog.findViewById(R.id.image);
image.setImageResource(R.drawable.android);
</pre>

    <p>After you instantiate the Dialog, set your custom layout as the dialog's content view with 
    <code><a href="../../../reference/android/app/Dialog.html#setContentView(int)">setContentView(int)</a></code>, passing it the layout resource ID.
    Now that the Dialog has a defined layout, you can capture View objects from the layout with
    <code><a href="../../../reference/android/app/Dialog.html#findViewById(int)">
	findViewById(int)</a></code> and modify their content.<br>
	<span lang="EN-US">在您实例化</span>Dialog<span lang="EN-US">之后，使用</span><code><a href="../../../reference/android/app/Dialog.html#setContentView(int)">setContentView(int)</a></code><span lang="EN-US">将您的个性化布局设置为对话框的显示内容，将布局文件资源</span>ID<span lang="EN-US">传给他。现在这个对话框就得到了一个定义好的布局，您可以使用</span><code><a href="../../../reference/android/app/Dialog.html#findViewById(int)">findViewById(int)</a></code><span lang="EN-US">从布局中获得</span>View<span lang="EN-US">对象，然后修改其内容。</span></p>
  </li>

  <li>That's it. You can now show the dialog as described in 
    <a href="#ShowingADialog">Showing A Dialog</a>.<br>
	<span lang="EN-US">就这么多了。您现在就可以照<a href="#ShowingADialog">Showing A Dialog</a>中描述的显示这个对话框了。</span></li>
</ol>

<p>A dialog made with the base Dialog class must have a title. If you don't call
<code><a href="../../../reference/android/app/Dialog.html#setTitle(java.lang.CharSequence)">setTitle()</a></code>, then the space used for the title
remains empty, but still visible. If you don't want
a title at all, then you should create your custom dialog using the
<code><a href="../../../reference/android/app/AlertDialog.html">AlertDialog</a></code> class. However, because an AlertDialog is created easiest with 
the <code><a href="../../../reference/android/app/AlertDialog.Builder.html">AlertDialog.Builder</a></code> class, you do not have access to the 
<code><a href="../../../reference/android/app/Dialog.html#setContentView(int)">setContentView(int)</a></code> method used above. Instead, you must use 
<code><a href="../../../reference/android/app/AlertDialog.Builder.html#setView(android.view.View)">setView(View)</a></code>. This method accepts a <code><a href="../../../reference/android/view/View.html">View</a></code> object,
so you need to inflate the layout's root View object from
XML.<br>
<span lang="EN-US">使用＊基类建造的对话框必须有一个标题。如果您不调用</span><code><a href="../../../reference/android/app/Dialog.html#setTitle(java.lang.CharSequence)">setTitle()</a></code><span lang="EN-US">，那么留做标题的区域就是空的，但是还是可见的。如果您确实不想设定一个标题，那么您就应该用</span><code><a href="../../../reference/android/app/AlertDialog.html">AlertDialog</a></code><span lang="EN-US">类创建您的个性化的对话框。但是，由于告警对话框很简单，使用</span><code><a href="../../../reference/android/app/AlertDialog.Builder.html">AlertDialog.Builder</a></code><span lang="EN-US">类进行建造，您就不能向上边例子中那样使用</span><code><a href="../../../reference/android/app/Dialog.html#setContentView(int)">setContentView(int)</a></code><span lang="EN-US">方法了。作为替代，您只好使用</span><code><a href="../../../reference/android/app/AlertDialog.Builder.html#setView(android.view.View)">setView(View)</a></code><span lang="EN-US">。这个方法接收一个</span> <code><a href="../../../reference/android/view/View.html">View</a></code> 
<span lang="EN-US">对象，所以您需要扩充XML文件中的根View。</span></p>

<p>To inflate the XML layout, retrieve the <code><a href="../../../reference/android/view/LayoutInflater.html">LayoutInflater</a></code> with 
<code><a href="../../../reference/android/app/Activity.html#getLayoutInflater()">getLayoutInflater()</a></code> 
(or <code><a href="../../../reference/android/content/Context.html#getSystemService(java.lang.String)">getSystemService()</a></code>),
and then call
<code><a href="../../../reference/android/view/LayoutInflater.html#inflate(int, android.view.ViewGroup)">inflate(int, ViewGroup)</a></code>, where the first parameter
is the layout resource ID and the second is the ID of the root View. At this point, you can use
the inflated layout to find View objects in the layout and define the content for the
ImageView and TextView elements. Then instantiate the AlertDialog.Builder and set the
inflated layout for the dialog with <code><a href="../../../reference/android/app/AlertDialog.Builder.html#setView(android.view.View)">setView(View)</a></code>.<br>
扩充<span lang="EN-US">XML布局文件，您可以使用</span> 
<code><a href="../../../reference/android/app/Activity.html#getLayoutInflater()">getLayoutInflater()</a></code><span lang="EN-US">（或</span><code><a href="../../../reference/android/content/Context.html#getSystemService(java.lang.String)">getSystemService()</a></code><span lang="EN-US">）获取一个</span> <code><a href="../../../reference/android/view/LayoutInflater.html">LayoutInflater</a></code> 
<span lang="EN-US">，然后调用</span><code><a href="../../../reference/android/view/LayoutInflater.html#inflate(int, android.view.ViewGroup)">inflate(int, ViewGroup)</a></code><span lang="EN-US">，第一个参数是布局文件的资源的</span>ID<span lang="EN-US">，第二个是根View的ID。这时，您就可以使用扩充后的布局文件寻找布局中的View对象，定义</span>ImageView
<span lang="EN-US">和</span>TextView<span lang="EN-US">元素的内容。然后实例化一个＊，使用＊根据增加支后的布局文件设置对话框。</span></p>

<p>Here's an example, creating a custom layout in an AlertDialog:<br>
<span lang="EN-US">下面是在</span> AlertDialog<span lang="EN-US">内进行个性化布局的例子：</span></p>

<pre>
AlertDialog.Builder builder;
AlertDialog alertDialog;

Context mContext = getApplicationContext();
LayoutInflater inflater = (LayoutInflater) mContext.getSystemService(LAYOUT_INFLATER_SERVICE);
View layout = inflater.inflate(R.layout.custom_dialog,
                               (ViewGroup) findViewById(R.id.layout_root));

TextView text = (TextView) layout.findViewById(R.id.text);
text.setText("Hello, this is a custom dialog!");
ImageView image = (ImageView) layout.findViewById(R.id.image);
image.setImageResource(R.drawable.android);

builder = new AlertDialog.Builder(mContext);
builder.setView(layout);
alertDialog = builder.create();
</pre>

<p>Using an AlertDialog for your custom layout lets you
take advantage of built-in AlertDialog features like managed buttons,
selectable lists, a title, an icon and so on.<br>
<span lang="EN-US">使用个性化的告警对话框可以在个性化的基础上，更好地利用自带的告警对话框功能，比如按钮，可选择列表，标题，图标等等。</span></p>

<p>For more information, refer to the reference documentation for the 
<code><a href="../../../reference/android/app/Dialog.html">Dialog</a></code> and <code><a href="../../../reference/android/app/AlertDialog.Builder.html">AlertDialog.Builder</a></code> 
classes.<br>
<span lang="EN-US">更多信息，参看</span><code><a href="../../../reference/android/app/Dialog.html">Dialog</a></code><span lang="EN-US">和</span> <code><a href="../../../reference/android/app/AlertDialog.Builder.html">AlertDialog.Builder</a></code><span lang="EN-US">类的参考文档。</span></p>




    </div>

  <a href="#top" style="float:right">&uarr; Go to top</a>
  
    <p><a href="index.html">&larr; Back to User Interface</a><br>
	回到用户界面</p>
  
  </div>

<div id="footer">


  <div id="copyright">
    
  Except as noted, this content is licensed under <a
  href="http://www.apache.org/licenses/LICENSE-2.0">Apache 2.0</a>. 
  For details and restrictions, see the <a href="../../../license.html">
  Content License</a>.
  </div>
  <div id="build_info">
    
  Android 2.0.1&nbsp;r1 - 24 Nov 2009 18:21

  </div>

  <div id="footerlinks">
    
  <p>
    <a href="http://www.android.com/terms.html">Site Terms of Service</a> -
    <a href="http://www.android.com/privacy.html">Privacy Policy</a> -
    <a href="http://www.android.com/branding.html">Brand Guidelines</a>
  </p>
  </div>

</div> <!-- end footer -->

</div><!-- end doc-content -->

</div> <!-- end body-content --> 

<script type="text/javascript">
init(); /* initialize android-developer-docs.js */
var gaJsHost = (("https:" == document.location.protocol) ? "https://ssl." : "http://www.");
document.write(unescape("%3Cscript src='" + gaJsHost + "google-analytics.com/ga.js' type='text/javascript'%3E%3C/script%3E"));
</script>
<script type="text/javascript">
var pageTracker = _gat._getTracker("UA-5831155-1");
pageTracker._trackPageview();
</script>

</body>
</html>



